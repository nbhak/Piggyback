<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008">
  <SolidColorBrush x:Key="OutsideFontColor" Color="#FFFFFFFF"/>
  <LinearGradientBrush x:Key="NormalBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFFFFFFF" Offset="0"/>
    <GradientStop Color="#FFA4ADBB" Offset="0.521"/>
    <GradientStop Color="#FFD7E0EA" Offset="0.194"/>
    <GradientStop Color="#FFBAC1CF" Offset="0.811"/>
    <GradientStop Color="#FFBCC5D5" Offset="0.507"/>
    <GradientStop Color="#FFE3E4E6" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0.5,0" StartPoint="0.5,1">
    <GradientStop Color="#FF8B8B8B"/>
    <GradientStop Color="#FFADADAD" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="NormalHighlightBrush" Color="#FFFFFFFF"/>
  <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFFFFFFF" Offset="0"/>
    <GradientStop Color="#FFFEF3B5" Offset="0.318"/>
    <GradientStop Color="#FFFFEB70" Offset="0.488"/>
    <GradientStop Color="#FFFFD02E" Offset="0.502"/>
    <GradientStop Color="#FFFFD932" Offset="0.834"/>
    <GradientStop Color="#FFFFF48B" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="MouseOverBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFEEE8CF" Offset="0"/>
    <GradientStop Color="#FFC4AF8C" Offset="0.536"/>
    <GradientStop Color="#FFDCD1BF" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="MouseOverHighlightBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFFFFFFB" Offset="0"/>
    <GradientStop Color="#FFFEF3B5" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PressedBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFC3BCAE" Offset="0"/>
    <GradientStop Color="#FFFDCE9D" Offset="0.046"/>
    <GradientStop Color="#FFFFA35B" Offset="0.452"/>
    <GradientStop Color="#FFFF8A2C" Offset="0.461"/>
    <GradientStop Color="#FFFF9F30" Offset="0.724"/>
    <GradientStop Color="#FFFFC472" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PressedBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FF8E8165" Offset="0"/>
    <GradientStop Color="#FFC3BCAE" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PressedHighlightBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFFFFFFF" Offset="0.665"/>
    <GradientStop Color="#FFC3BCAE" Offset="0"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#A5FFFFFF"/>
  <SolidColorBrush x:Key="DisabledBorderBrush" Color="#66FFFFFF"/>
  <SolidColorBrush x:Key="FocusBrush" Color="#FFE99862"/>
  <LinearGradientBrush x:Key="ControlBackgroundBrush" EndPoint="1.204,0.5" StartPoint="0.056,0.5">
    <GradientStop Color="#FFFFFFFF" Offset="0"/>
    <GradientStop Color="#FFD4D7DB" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ControlBorderBrush" Color="#FFB1703C"/>
  <SolidColorBrush x:Key="GlyphBrush" Color="#FF527DB5"/>
  <SolidColorBrush x:Key="CheckBoxBackgroundBrush" Color="#FFF4F4F4"/>
  <SolidColorBrush x:Key="CheckBoxBorderBrush" Color="#FF868686"/>
  <SolidColorBrush x:Key="CheckBoxInnerBoxBackgroundBrush" Color="#FFCACFD5"/>
  <LinearGradientBrush x:Key="CheckBoxInnerBoxBorderBrush" EndPoint="-0.007,-0.012" StartPoint="0.915,0.92">
    <GradientStop Color="#FFE4E5E9"/>
    <GradientStop Color="#FFA2ACB9" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="CheckBoxBackgroundFillBrush" Color="#FFDEEAFA"/>
  <SolidColorBrush x:Key="CheckBoxMouseOverBrush" Color="#FFFCE7AF"/>
  <LinearGradientBrush x:Key="CheckBoxPressBorderBrush" EndPoint="0.055,0.119" StartPoint="0.886,0.808">
    <GradientStop Color="#FFF4D9BE"/>
    <GradientStop Color="#FFF28A27" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="CheckBoxInnerBoxGradientBrush" StartPoint="0.238,0.228" EndPoint="0.752,0.749">
    <GradientStop Color="#00F6F6F6" Offset="0.254"/>
    <GradientStop Color="#53F8F8F8" Offset="0.54"/>
    <GradientStop Color="#BFFFFFFF" Offset="0.996"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="RadioButtonBackgroundBrush" Color="#FFEDEDEE"/>
  <SolidColorBrush x:Key="RadioButtonBorderBrush" Color="#FF597AA5"/>
  <LinearGradientBrush x:Key="RadioButtonInnerCircleBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFC8CDD2"/>
    <GradientStop Color="#FFF2F2F2" Offset="0.531"/>
    <GradientStop Color="#FFF5F5F5" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="RadioButtonInnerCircleBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFB3B8BD" Offset="0.004"/>
    <GradientStop Color="#FFE0E0E0" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="RadioButtonMouseOverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFE3DBA9"/>
    <GradientStop Color="#FFFEF5DD" Offset="0.531"/>
    <GradientStop Color="#FFFEF5DD" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="RadioButtonMouseOverBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFE3CF87" Offset="0.004"/>
    <GradientStop Color="#FFFCF0D3" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="RadioButtonPressBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFC8CDD2"/>
    <GradientStop Color="#FFF2F2F2" Offset="0.531"/>
    <GradientStop Color="#FFF5F5F5" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="RadioButtonPressBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFAC773F" Offset="0.004"/>
    <GradientStop Color="#FFC8B5A3" Offset="0.987"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="RadioButtonCheckIconBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFFDDC8B" Offset="0.013"/>
    <GradientStop Color="#FFFDDC8B" Offset="0.188"/>
    <GradientStop Color="#FFF9952F" Offset="0.491"/>
    <GradientStop Color="#FFF9954A" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="RadioButtonCheckIconBorderBrush" Color="#FFDA8229"/>
  <LinearGradientBrush x:Key="ScrollBarRepeatButtonBrush" EndPoint="0.5,0" StartPoint="0.5,1">
    <GradientStop Color="#FFF1F6FE" Offset="0.5"/>
    <GradientStop Color="#FFC7D9F1" Offset="0.513"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ScrollBarRepeatButtonBorderBrush" Color="#FF8C97A5"/>
  <LinearGradientBrush x:Key="ScrollBarRepeatButtonPressedBrush" EndPoint="0.5,0" StartPoint="0.5,1">
    <GradientStop Color="#FFF1F6FE" Offset="0.5"/>
    <GradientStop Color="#FFD1D6DD" Offset="0.513"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ScrollBarRepeatButtonPressedBorderBrush" Color="#FF19598A"/>
  <LinearGradientBrush x:Key="ScrollBarThumbBrush" EndPoint="-0.062,0.5" StartPoint="1.062,0.5">
    <GradientStop Color="#FFD1DBE6" Offset="0"/>
    <GradientStop Color="#FFD1DAE4" Offset="0.5"/>
    <GradientStop Color="#FFE6E9F0" Offset="0.513"/>
    <GradientStop Color="#FFE8E9E9" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ScrollBarThumbBorderBrush" Color="#FF606F94"/>
  <LinearGradientBrush x:Key="ScrollBarThumbMouseOverBrush" EndPoint="-0.062,0.5" StartPoint="1.062,0.5">
    <GradientStop Color="#FFB4D1F7" Offset="0"/>
    <GradientStop Color="#FFAACBF6" Offset="0.5"/>
    <GradientStop Color="#FFCADFFA" Offset="0.513"/>
    <GradientStop Color="#FFBED0E8" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ScrollBarThumbMouseOverBorderBrush" Color="#FF3C6EB0"/>
  <LinearGradientBrush x:Key="ScrollBarThumbPressedBrush" EndPoint="-0.062,0.5" StartPoint="1.062,0.5">
    <GradientStop Color="#FFB4D1F7" Offset="0"/>
    <GradientStop Color="#FF6EA6F0" Offset="0.5"/>
    <GradientStop Color="#FFA4C7F6" Offset="0.513"/>
    <GradientStop Color="#FF9CBBE5" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ScrollBarThumbPressedBorderBrush" Color="#FF17498A"/>
  <LinearGradientBrush x:Key="ListItemSelectedBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFFFFFFF" Offset="0.046"/>
    <GradientStop Color="#FFD7E0EA" Offset="0.194"/>
    <GradientStop Color="#FFBCC5D5" Offset="0.507"/>
    <GradientStop Color="#FFA4ADBB" Offset="0.521"/>
    <GradientStop Color="#FFBAC1CF" Offset="0.811"/>
    <GradientStop Color="#FFE3E4E6" Offset="0.982"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ListItemSelectedBorderBrush" EndPoint="0.5,0" StartPoint="0.5,1">
    <GradientStop Color="#FF8B8B8B"/>
    <GradientStop Color="#FFADADAD" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderToggleButtonBrush" EndPoint="0.293,0.43" StartPoint="0.742,0.43">
    <GradientStop Color="#FFDDE0E3"/>
    <GradientStop Color="#FFEFF0F1" Offset="0.53"/>
    <GradientStop Color="#FFDDE0E3" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ExpanderToggleButtonBottomBrush" Color="#FFC7CBD1"/>
  <LinearGradientBrush x:Key="ExpanderToggleButtonHoverBrush" EndPoint="0.667,0.528" StartPoint="0.266,0.528">
    <GradientStop Color="#FFE8EAEC"/>
    <GradientStop Color="#FFFEFEFE" Offset="0.366"/>
    <GradientStop Color="#FFFEFEFE" Offset="0.732"/>
    <GradientStop Color="#FFE8EAEC" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ExpanderToggleArrow2Stroke" Color="#FF567DB1"/>
  <SolidColorBrush x:Key="ExpanderToggleArrowStroke" Color="#FF567DB1"/>
  <LinearGradientBrush x:Key="ProgressBarIndicatorBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFC3BCAE" Offset="0"/>
    <GradientStop Color="#FFFDCE9D" Offset="0.041"/>
    <GradientStop Color="#FFFFA35B" Offset="0.507"/>
    <GradientStop Color="#FFFF8A2C" Offset="0.516"/>
    <GradientStop Color="#FFFF9F30" Offset="0.724"/>
    <GradientStop Color="#FFFFC472" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TabControlHeaderBrush" Color="#FF535353"/>
  <SolidColorBrush x:Key="TabControlContentBrush" Color="#FFD5D8DD"/>
  <SolidColorBrush x:Key="TabControlContentBorderBrush" Color="#FFBEBEBE"/>
  <RadialGradientBrush x:Key="TabItemHoverBrush" GradientOrigin="0.503,1.06">
    <Brush.RelativeTransform>
      <TransformGroup>
        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.713" ScaleY="2.147"/>
        <SkewTransform CenterX="0.5" CenterY="0.5"/>
        <RotateTransform CenterX="0.5" CenterY="0.5"/>
        <TranslateTransform X="-0.012" Y="-0.134"/>
      </TransformGroup>
    </Brush.RelativeTransform>
    <GradientStop Color="#FFEBC227" Offset="0.263"/>
    <GradientStop Color="#00726C5E" Offset="0.513"/>
    <GradientStop Color="#FF969695" Offset="0.683"/>
  </RadialGradientBrush>
  <LinearGradientBrush x:Key="TabItemHoverBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#00FFFFFF" Offset="0"/>
    <GradientStop Color="#FFBEBEBE" Offset="0.679"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TabItemHoverHighlightBrush" Color="#FF9FBCF0"/>
  <LinearGradientBrush x:Key="TabItemSelectedBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFF1F1F2" Offset="0.326"/>
    <GradientStop Color="#FFD5D9DE" Offset="1.0"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TabItemSelectedBorderBrush" Color="#FFF3F8FF"/>
  <LinearGradientBrush x:Key="TabItemBorderTopBrush" EndPoint="0.5,1" StartPoint="0.5,-0.5">
    <GradientStop Color="#FFECF9FA" Offset="0"/>
    <GradientStop Color="#FFC1F7FC" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="TabItemHighlightTopBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFF3F8FF" Offset="0"/>
    <GradientStop Color="#D8ECF8FC" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TabItemBorderTop2Brush" Color="#FF9ABBE6"/>
  <LinearGradientBrush x:Key="TabItemFocusBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#99F7C53B" Offset="0"/>
    <GradientStop Color="#99F2B93F" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="SliderThumbBorderBrush" Color="#FF496FA2"/>
  <SolidColorBrush x:Key="SliderThumbBrush" Color="#FFC1C1C1"/>
  <LinearGradientBrush x:Key="SliderBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FF324D70" Offset="0.493"/>
    <GradientStop Color="#FF6A8BB6" Offset="1"/>
  </LinearGradientBrush>
  <Color x:Key="BlackColor">#FF000000</Color>
  <Color x:Key="WhiteColor">#FFFFFFFF</Color>
  <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
  <LinearGradientBrush x:Key="TextControlBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFABAEB3"/>
    <GradientStop Color="#FFE2E8EE" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF"/>
  <Style x:Key="NuclearButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="2" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}"/>
    <Setter Property="Control.Foreground" Value="#FF042271"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.Padding" Value="3"/>
    <Setter Property="Control.Template" Value="{DynamicResource ButtonTemplate}"/>
  </Style>
  <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
    <FrameworkTemplate.Resources>
      <Storyboard x:Key="HoverOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver"
                         Storyboard.TargetProperty="Opacity" To="1"/>
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight"
                         Storyboard.TargetProperty="Opacity" To="0.65"/>
      </Storyboard>
      <Storyboard x:Key="HoverOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver"
                         Storyboard.TargetProperty="Opacity" To="0"/>
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver_Highlight"
                         Storyboard.TargetProperty="Opacity" To="0"/>
      </Storyboard>
      <Storyboard x:Key="PressedOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed"
                         Storyboard.TargetProperty="Opacity" To="0.84"/>
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight"
                         Storyboard.TargetProperty="Opacity" To="0.65"/>
      </Storyboard>
      <Storyboard x:Key="PressedOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPressed"
                         Storyboard.TargetProperty="Opacity" To="0"/>
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgoundPressed_Highlight"
                         Storyboard.TargetProperty="Opacity" To="0"/>
      </Storyboard>
      <Storyboard x:Key="DisabledOn">
        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Visibility)">
          <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledOverlay"
                                       Storyboard.TargetProperty="(UIElement.Visibility)">
          <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </FrameworkTemplate.Resources>
    <Grid x:Name="Grid">
      <Border x:Name="BackgroundNorm" BorderThickness="1" CornerRadius="1.75"
              Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}"/>
      <Border x:Name="BackgroundNorm_highlight" Margin="1" BorderBrush="{DynamicResource NormalHighlightBrush}"
              BorderThickness="1,0,1,1" CornerRadius="1" Opacity="0.65"/>
      <Border x:Name="BackgroundOver" BorderThickness="1" CornerRadius="1.75" Opacity="0"
              Background="{DynamicResource MouseOverBrush}" BorderBrush="{DynamicResource MouseOverBorderBrush}"/>
      <Border x:Name="BackgroundOver_Highlight" Margin="1" BorderThickness="1,0,1,1" CornerRadius="1" Opacity="0"
              BorderBrush="{DynamicResource MouseOverHighlightBrush}"/>
      <Border x:Name="BackgroundPressed" BorderThickness="1" CornerRadius="1.75" Opacity="0"
              Background="{DynamicResource PressedBrush}" BorderBrush="{DynamicResource PressedBorderBrush}"/>
      <Border x:Name="BackgoundPressed_Highlight" Margin="1" BorderThickness="1,0,1,1" CornerRadius="1"
              Opacity="0" BorderBrush="{DynamicResource PressedHighlightBrush}"/>
      <Border x:Name="DisabledVisualElement" IsHitTestVisible="false"
              Background="{DynamicResource DisabledBackgroundBrush}"
              BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1" Opacity="0"/>
      <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding ContentControl.Content}"
                        ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                        Margin="{TemplateBinding Control.Padding}"/>
      <TextBlock x:Name="DisabledOverlay" Panel.ZIndex="1" Text="{TemplateBinding ContentControl.Content}"
                 Foreground="#FF8E96A2" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                 VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                 Margin="{TemplateBinding Control.Padding}" Visibility="Collapsed"/>
      <Border x:Name="FocusVisualElement" Margin="-1" BorderBrush="{DynamicResource FocusBrush}"
              BorderThickness="1" CornerRadius="2.75" IsHitTestVisible="false" Opacity="0"/>
      <Border x:Name="DefaultBorder" Margin="-1" BorderBrush="{DynamicResource FocusBrush}" BorderThickness="1"
              CornerRadius="2.75" IsHitTestVisible="false" Opacity="0"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="Button.IsDefault" Value="true">
        <Setter TargetName="DefaultBorder" Property="UIElement.Opacity" Value="1"/>
      </Trigger>
      <Trigger Property="UIElement.IsFocused" Value="true">
        <TriggerBase.EnterActions>
          <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
        </TriggerBase.ExitActions>
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="FocusedOff_BeginStoryboard1" Storyboard="{StaticResource FocusedOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard x:Name="FocusedOn_BeginStoryboard1" Storyboard="{StaticResource FocusedOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="true"/>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource DisabledOn}"/>
        </TriggerBase.EnterActions>
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground"/>
        <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="1"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="RadioButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="CheckBoxFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type CheckBox}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
    <Setter Property="Control.Padding" Value="4,1,0,0"/>
    <Setter Property="Control.Template" Value="{DynamicResource CheckBoxTemplate}"/>
  </Style>
  <ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
    <FrameworkTemplate.Resources>
      <Storyboard x:Key="HoverOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BoxOver" Storyboard.TargetProperty="Opacity"
                         To="1"/>
      </Storyboard>
      <Storyboard x:Key="HoverOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BoxOver" Storyboard.TargetProperty="Opacity"
                         To="0"/>
      </Storyboard>
      <Storyboard x:Key="PressedOn">
        <ColorAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BoxOver"
                        Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                        To="#FFF28A27"/>
        <ColorAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BoxOver"
                        Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                        To="#FFF4D9BE"/>
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BoxOver" Storyboard.TargetProperty="Opacity"
                         To="1"/>
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundFill"
                         Storyboard.TargetProperty="Opacity" To="1"/>
      </Storyboard>
      <Storyboard x:Key="PressedOff">
        <ColorAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BoxOver"
                        Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                        To="#FFFDDA81"/>
        <ColorAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BoxOver"
                        Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                        To="#FFFCE7AF"/>
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BoxOver" Storyboard.TargetProperty="Opacity"
                         To="0"/>
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundFill"
                         Storyboard.TargetProperty="Opacity" To="0"/>
      </Storyboard>
      <Storyboard x:Key="DisabledOn">
        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Visibility)">
          <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="CheckedOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BoxPress" Storyboard.TargetProperty="Opacity"
                         To="1"/>
        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIcon"
                                       Storyboard.TargetProperty="(UIElement.Visibility)">
          <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="CheckedOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BoxPress" Storyboard.TargetProperty="Opacity"
                         To="0"/>
        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIcon"
                                       Storyboard.TargetProperty="(UIElement.Visibility)">
          <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Collapsed}"/>
        </ObjectAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="IndeterminateOn">
        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateIcon"
                                       Storyboard.TargetProperty="(UIElement.Visibility)">
          <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="IndeterminateOff">
        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateIcon"
                                       Storyboard.TargetProperty="(UIElement.Visibility)">
          <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Collapsed}"/>
        </ObjectAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </FrameworkTemplate.Resources>
    <BulletDecorator Background="Transparent">
      <BulletDecorator.Bullet>
        <Grid>
          <Rectangle x:Name="Background" Margin="1" Width="13" Height="13" RadiusX="0" RadiusY="0"
                     Fill="{DynamicResource CheckBoxBackgroundBrush}" Stroke="{DynamicResource CheckBoxBorderBrush}"
                     StrokeThickness="1"/>
          <Rectangle x:Name="BoxFill" Width="9" Height="9" RadiusX="0" RadiusY="0"
                     Fill="{DynamicResource CheckBoxInnerBoxBackgroundBrush}" StrokeThickness="1"
                     Stroke="{DynamicResource CheckBoxInnerBoxBorderBrush}"/>
          <Rectangle x:Name="BackgroundFill" Margin="1" Width="13" Height="13" RadiusX="0" RadiusY="0"
                     Fill="{DynamicResource CheckBoxBackgroundFillBrush}" Stroke="#FF5577A3" StrokeThickness="1"
                     Opacity="0"/>
          <Rectangle x:Name="BoxOver" Margin="3" Width="9" Height="9" RadiusX="0" RadiusY="0"
                     Fill="{DynamicResource CheckBoxMouseOverBrush}" StrokeThickness="1" Opacity="0">
            <Shape.Stroke>
              <LinearGradientBrush EndPoint="0.055,0.119" StartPoint="0.886,0.808">
                <GradientStop Color="#FFFCE7AF"/>
                <GradientStop Color="#FFFDDA81" Offset="1"/>
              </LinearGradientBrush>
            </Shape.Stroke>
          </Rectangle>
          <Rectangle x:Name="BoxPress" Margin="3" Width="9" Height="9" RadiusX="0" RadiusY="0" StrokeThickness="1"
                     Opacity="0" Stroke="{DynamicResource CheckBoxPressBorderBrush}"/>
          <Rectangle x:Name="BoxGradient" Width="7" Height="7" RadiusX="0" RadiusY="0" StrokeThickness="1"
                     Fill="{DynamicResource CheckBoxInnerBoxGradientBrush}"/>
          <Rectangle x:Name="IndeterminateIcon" Width="5" Height="2" Fill="{DynamicResource GlyphBrush}"
                     HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"/>
          <Path x:Name="CheckIcon" Margin="0,3.333,3.833,0" Width="7" Height="9"
                Fill="{DynamicResource GlyphBrush}" Stretch="Fill" VerticalAlignment="Top"
                HorizontalAlignment="Right"
                Data="M 103.78572,598.96112 L 105.09846,597.5661 107.00806,600.16229 C 107.00806,600.16229 109.91004,592.74463 109.91004,592.74463 109.91004,592.74463 111.74678,593.79761 111.74678,593.79761 111.74678,593.79761 107.88566,602.75848 107.88566,602.75848 L 106.60118,602.75848 Z"
                Visibility="Collapsed"/>
          <Rectangle x:Name="FocusedVisualElement" RadiusX="0" RadiusY="0" Stroke="{DynamicResource FocusBrush}"
                     StrokeThickness="1" Opacity="0"/>
          <Rectangle x:Name="DisabledVisualElement" Margin="1" RadiusX="0" RadiusY="0"
                     Fill="{DynamicResource DisabledBackgroundBrush}" Visibility="Collapsed"/>
        </Grid>
      </BulletDecorator.Bullet>
      <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Content="{TemplateBinding ContentControl.Content}"
                        ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                        Margin="{TemplateBinding Control.Padding}"/>
    </BulletDecorator>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsFocused" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ToggleButton.IsChecked" Value="True"/>
          <Condition Property="ToggleButton.IsThreeState" Value="true"/>
        </MultiTrigger.Conditions>
        <TriggerBase.EnterActions>
          <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}"/>
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}"/>
        </TriggerBase.ExitActions>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Value="{x:Null}" Property="ToggleButton.IsChecked"/>
          <Condition Property="ToggleButton.IsThreeState" Value="true"/>
        </MultiTrigger.Conditions>
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource IndeterminateOn}"/>
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource IndeterminateOff}"/>
        </TriggerBase.ExitActions>
        <Setter TargetName="CheckIcon" Property="UIElement.Opacity" Value="0"/>
      </MultiTrigger>
      <Trigger Property="ToggleButton.IsChecked" Value="True">
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="CheckedOn_BeginStoryboard2" Storyboard="{StaticResource CheckedOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard x:Name="CheckedOn_BeginStoryboard1" Storyboard="{StaticResource CheckedOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource DisabledOn}"/>
        </TriggerBase.EnterActions>
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type RadioButton}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
    <Setter Property="Control.Padding" Value="4,1,0,0"/>
    <Setter Property="Control.Template" Value="{DynamicResource RadioButtonTemplate}"/>
  </Style>
  <ControlTemplate x:Key="RadioButtonTemplate" TargetType="{x:Type RadioButton}">
    <FrameworkTemplate.Resources>
      <Storyboard x:Key="HoverOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="CircleOver" Storyboard.TargetProperty="Opacity"
                         To="1"/>
      </Storyboard>
      <Storyboard x:Key="HoverOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="CircleOver" Storyboard.TargetProperty="Opacity"
                         To="0"/>
      </Storyboard>
      <Storyboard x:Key="PressedOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="CirclePress" Storyboard.TargetProperty="Opacity"
                         To="1"/>
      </Storyboard>
      <Storyboard x:Key="PressedOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="CirclePress" Storyboard.TargetProperty="Opacity"
                         To="0"/>
      </Storyboard>
      <Storyboard x:Key="DisabledOn"/>
      <Storyboard x:Key="CheckedOn">
        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIcon"
                                       Storyboard.TargetProperty="(UIElement.Visibility)">
          <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="CheckedOff">
        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIcon"
                                       Storyboard.TargetProperty="(UIElement.Visibility)">
          <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Collapsed}"/>
        </ObjectAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </FrameworkTemplate.Resources>
    <BulletDecorator Background="Transparent">
      <BulletDecorator.Bullet>
        <Grid>
          <Ellipse x:Name="Background" Margin="1" Width="14" Height="14"
                   Fill="{DynamicResource RadioButtonBackgroundBrush}"
                   Stroke="{DynamicResource RadioButtonBorderBrush}" StrokeThickness="1"/>
          <Ellipse x:Name="CircleFill" Margin="3.045,3.157,2.955,2.843" StrokeThickness="1"
                   Fill="{DynamicResource RadioButtonInnerCircleBrush}"
                   Stroke="{DynamicResource RadioButtonInnerCircleBorderBrush}"/>
          <Ellipse x:Name="CircleOver" Margin="2.847,2.847,3.153,3.153" StrokeThickness="1" Opacity="0"
                   Fill="{DynamicResource RadioButtonMouseOverBrush}"
                   Stroke="{DynamicResource RadioButtonMouseOverBorderBrush}"/>
          <Ellipse x:Name="CirclePress" Margin="2.73,2.73,3.27,3.27" StrokeThickness="1" Opacity="0"
                   Fill="{DynamicResource RadioButtonPressBrush}"
                   Stroke="{DynamicResource RadioButtonPressBorderBrush}"/>
          <Ellipse x:Name="CheckIcon" Margin="4.47,4.498,3.53,3.502" StrokeThickness="1" Visibility="Collapsed"
                   Stroke="{DynamicResource RadioButtonCheckIconBorderBrush}"
                   Fill="{DynamicResource RadioButtonCheckIconBrush}"/>
          <Ellipse x:Name="DisabledVisualElement" Width="14" Height="14" Opacity="0.35" Visibility="Visible">
            <Shape.Stroke>
              <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
            </Shape.Stroke>
            <Shape.Fill>
              <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
            </Shape.Fill>
          </Ellipse>
          <Ellipse x:Name="FocusedVisualElement" Width="16" Height="16" Stroke="{DynamicResource FocusBrush}"
                   StrokeThickness="1" IsHitTestVisible="false" Opacity="0"/>
        </Grid>
      </BulletDecorator.Bullet>
      <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Content="{TemplateBinding ContentControl.Content}"
                        ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                        Margin="{TemplateBinding Control.Padding}"/>
    </BulletDecorator>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsFocused" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="ToggleButton.IsChecked" Value="false">
        <TriggerBase.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource CheckedOn}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource CheckedOff}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource DisabledOn}"/>
        </TriggerBase.EnterActions>
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="NuclearRepeatButton" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed"
                               Storyboard.TargetProperty="Opacity" To="1"/>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPressed"
                               Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity"
                               To="1"/>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Highlight"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity"
                               To="0"/>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Highlight"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid>
            <Rectangle x:Name="Background" RadiusX="0.5" RadiusY="0.5" StrokeThickness="1"
                       Stroke="{DynamicResource ScrollBarRepeatButtonBorderBrush}" Opacity="0"
                       Fill="{DynamicResource ScrollBarRepeatButtonBrush}"/>
            <Rectangle x:Name="BackgroundPressed" RadiusX="0.5" RadiusY="0.5" StrokeThickness="1"
                       Stroke="{DynamicResource ScrollBarRepeatButtonPressedBorderBrush}" Opacity="0"
                       Fill="{DynamicResource ScrollBarRepeatButtonPressedBrush}"/>
            <Rectangle x:Name="Highlight" Margin="1" RadiusX="0.5" RadiusY="0.5" Stroke="#99FFFFFF" StrokeThickness="1"
                       Opacity="0" IsHitTestVisible="false"/>
            <Rectangle x:Name="DisabledElement" RadiusX="0" RadiusY="0" Fill="{DynamicResource DisabledBackgroundBrush}"
                       Opacity="0"/>
            <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center"
                              Content="{TemplateBinding ContentControl.Content}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                              ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true"/>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground"/>
              <Setter TargetName="ContentPresenter" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NuclearThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundMouseOver"
                               Storyboard.TargetProperty="Opacity" To="1"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundMouseOver"
                               Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed"
                               Storyboard.TargetProperty="Opacity" To="1"/>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPressed"
                               Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid x:Name="ThumbVisual" Margin="0,0,0,0">
            <Rectangle x:Name="Background" RadiusX="1.5" RadiusY="1.5" StrokeThickness="1"
                       Stroke="{DynamicResource ScrollBarThumbBorderBrush}" Fill="{DynamicResource ScrollBarThumbBrush}"/>
            <Rectangle x:Name="BackgroundMouseOver" RadiusX="1.5" RadiusY="1.5" StrokeThickness="1"
                       Stroke="{DynamicResource ScrollBarThumbMouseOverBorderBrush}" Opacity="0"
                       Fill="{DynamicResource ScrollBarThumbMouseOverBrush}"/>
            <Rectangle x:Name="BackgroundPressed" RadiusX="1.5" RadiusY="1.5" StrokeThickness="1"
                       Stroke="{DynamicResource ScrollBarThumbPressedBorderBrush}" Opacity="0"
                       Fill="{DynamicResource ScrollBarThumbPressedBrush}"/>
            <Path Margin="0,-6,0,0" Width="11" Height="1" Stretch="Fill" Stroke="#FF848485" StrokeThickness="1"
                  Data="M 4.8333325,7.2499995 L 12.012101,7.2499995 " VerticalAlignment="Center"
                  HorizontalAlignment="Center">
              <Shape.Fill>
                <LinearGradientBrush EndPoint="-0.062,0.5" StartPoint="1.062,0.5">
                  <GradientStop Color="#FFC8C9CC" Offset="0.487"/>
                  <GradientStop Color="#FFF0F0F0" Offset="0.518"/>
                </LinearGradientBrush>
              </Shape.Fill>
            </Path>
            <Path Margin="0,-2,0,0" Width="11" Height="1" Stretch="Fill" Stroke="#FF848485" StrokeThickness="1"
                  Data="M 4.8333325,7.2499995 L 12.012101,7.2499995 " VerticalAlignment="Center"
                  HorizontalAlignment="Center">
              <Shape.Fill>
                <LinearGradientBrush EndPoint="-0.062,0.5" StartPoint="1.062,0.5">
                  <GradientStop Color="#FFC8C9CC" Offset="0.487"/>
                  <GradientStop Color="#FFF0F0F0" Offset="0.518"/>
                </LinearGradientBrush>
              </Shape.Fill>
            </Path>
            <Path Margin="0,0,0,-2" Width="11" Height="1" Stretch="Fill" Stroke="#FF848485" StrokeThickness="1"
                  Data="M 4.8333325,7.2499995 L 12.012101,7.2499995 " VerticalAlignment="Center"
                  HorizontalAlignment="Center">
              <Shape.Fill>
                <LinearGradientBrush EndPoint="-0.062,0.5" StartPoint="1.062,0.5">
                  <GradientStop Color="#FFC8C9CC" Offset="0.487"/>
                  <GradientStop Color="#FFF0F0F0" Offset="0.518"/>
                </LinearGradientBrush>
              </Shape.Fill>
            </Path>
            <Path Margin="0,0,0,-6" Width="11" Height="1" Stretch="Fill" Stroke="#FF848485" StrokeThickness="1"
                  Data="M 4.8333325,7.2499995 L 12.012101,7.2499995 " VerticalAlignment="Center"
                  HorizontalAlignment="Center">
              <Shape.Fill>
                <LinearGradientBrush EndPoint="-0.062,0.5" StartPoint="1.062,0.5">
                  <GradientStop Color="#FFC8C9CC" Offset="0.487"/>
                  <GradientStop Color="#FFF0F0F0" Offset="0.518"/>
                </LinearGradientBrush>
              </Shape.Fill>
            </Path>
            <Rectangle x:Name="Highlight" Margin="1" RadiusX="0.5" RadiusY="0.5" StrokeThickness="1" Opacity="0.6"
                       IsHitTestVisible="false" Stroke="{DynamicResource NormalHighlightBrush}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="true"/>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="ThumbVisual" Property="UIElement.Opacity" Value="0"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NuclearScrollRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid>
            <Rectangle Fill="{TemplateBinding Control.Background}" Stroke="{TemplateBinding Control.BorderBrush}"
                       StrokeThickness="{TemplateBinding Control.BorderThickness}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="18"/>
              <RowDefinition Height="0.00001*"/>
              <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Rectangle Grid.RowSpan="4" RadiusX="0" RadiusY="0" StrokeThickness="1" Opacity="1">
              <Shape.Stroke>
                <SolidColorBrush Color="#FFF0F0F0"/>
              </Shape.Stroke>
              <Shape.Fill>
                <SolidColorBrush Color="#FFEFEFEF"/>
              </Shape.Fill>
            </Rectangle>
            <RepeatButton x:Name="DecreaseRepeat" Style="{DynamicResource NuclearRepeatButton}"
                          Command="ScrollBar.LineUpCommand">
              <Grid>
                <Path Data="F1 M 541.537,173.589 L 531.107,173.589 536.322,167.49 541.537,173.589 Z" Height="6"
                      Width="10" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
                      IsHitTestVisible="false">
                  <Shape.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#FF5E6D91"/>
                      <GradientStop Color="#FF2B3B60" Offset="1"/>
                    </LinearGradientBrush>
                  </Shape.Fill>
                </Path>
              </Grid>
            </RepeatButton>
            <Track x:Name="PART_Track" Grid.Row="1" Orientation="Vertical" IsDirectionReversed="true">
              <Track.Thumb>
                <Thumb Style="{DynamicResource NuclearThumbStyle}"/>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton x:Name="PageUp" Style="{DynamicResource NuclearScrollRepeatButtonStyle}"
                              Command="ScrollBar.PageDownCommand"/>
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton x:Name="PageDown" Style="{DynamicResource NuclearScrollRepeatButtonStyle}"
                              Command="ScrollBar.PageUpCommand"/>
              </Track.DecreaseRepeatButton>
            </Track>
            <RepeatButton x:Name="IncreaseRepeat" Grid.Row="2" Style="{DynamicResource NuclearRepeatButton}"
                          Command="ScrollBar.LineDownCommand">
              <Grid>
                <Path Data="F1 M 531.107,321.943 L 541.537,321.943 536.322,328.042 531.107,321.943 Z" Grid.Row="4"
                      Height="6" Width="10" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
                      IsHitTestVisible="false">
                  <Shape.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#FF5E6D91" Offset="0.004"/>
                      <GradientStop Color="#FF2B3B60" Offset="0.996"/>
                    </LinearGradientBrush>
                  </Shape.Fill>
                </Path>
              </Grid>
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
              <Setter TargetName="GridRoot" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_Track" Property="Track.Orientation" Value="Vertical"/>
              <Setter TargetName="DecreaseRepeat" Property="ButtonBase.Command" Value="ScrollBar.LineLeftCommand"/>
              <Setter TargetName="IncreaseRepeat" Property="ButtonBase.Command" Value="ScrollBar.LineRightCommand"/>
              <Setter TargetName="PageDown" Property="ButtonBase.Command" Value="ScrollBar.PageLeftCommand"/>
              <Setter TargetName="PageUp" Property="ButtonBase.Command" Value="ScrollBar.PageRightCommand"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Control.Padding}"
                                    Content="{TemplateBinding ContentControl.Content}"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar"
                       Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Grid.Column="0"
                       Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                       Minimum="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                       AutomationProperties.AutomationId="HorizontalScrollBar"
                       Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ScrollBar x:Name="PART_VerticalScrollBar"
                       Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Grid.Column="1"
                       Grid.Row="0" Orientation="Vertical" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                       Minimum="0" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                       AutomationProperties.AutomationId="VerticalScrollBar"
                       Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ListBox}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Grid>
            <Border x:Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="1"
                    Background="{DynamicResource ControlBackgroundBrush}">
              <ScrollViewer Margin="1" Focusable="false" Foreground="{TemplateBinding Control.Foreground}">
                <StackPanel Margin="2" IsItemsHost="true"/>
              </ScrollViewer>
            </Border>
            <Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Background="#A5FFFFFF"
                    BorderBrush="#66FFFFFF" BorderThickness="1" Opacity="0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ListBoxItem}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Padding" Value="3"/>
    <Setter Property="Control.Foreground" Value="Black"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientOver"
                               Storyboard.TargetProperty="Opacity" To="0.73"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientOver"
                               Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected"
                               Storyboard.TargetProperty="Opacity" To="0.84"/>
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled"
                               Storyboard.TargetProperty="Opacity" To="0.55"/>
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelected"
                               Storyboard.TargetProperty="Opacity" To="0"/>
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled"
                               Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="BackgroundGradientOver" RadiusX="1" RadiusY="1"
                       Stroke="{DynamicResource MouseOverBorderBrush}" Opacity="0" Fill="{DynamicResource MouseOverBrush}"/>
            <Rectangle x:Name="BackgroundGradientSelectedDisabled" RadiusX="1" RadiusY="1" Opacity="0"
                       Fill="{DynamicResource ListItemSelectedBrush}"
                       Stroke="{DynamicResource ListItemSelectedBorderBrush}"/>
            <Rectangle x:Name="BackgroundGradientSelected" Stroke="{DynamicResource PressedBorderBrush}"
                       StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" Fill="{DynamicResource PressedBrush}"/>
            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding ContentControl.Content}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ListBoxItem.IsSelected" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderHeaderFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle SnapsToDevicePixels="true" Margin="0" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Foreground" Value="#FF15428B"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="11"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
    <Setter Property="Control.Padding" Value="6,0,4,0"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="arrow_over" Storyboard.TargetProperty="Opacity"
                               To="1"/>
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="border_over" Storyboard.TargetProperty="Opacity"
                               To="1"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="arrow_over" Storyboard.TargetProperty="Opacity"
                               To="0"/>
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="border_over" Storyboard.TargetProperty="Opacity"
                               To="0"/>
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.1000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.1000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow2"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.1000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.1000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow2"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Focus_Border"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow_focus"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Focus_Border"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow_focus"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="border_fill" Grid.ColumnSpan="2" Background="{DynamicResource ExpanderToggleButtonBrush}"/>
            <Border x:Name="border_inner" Margin="0,0,0,1" Grid.ColumnSpan="2" BorderBrush="#FFFFFFFF"
                    BorderThickness="1,1,0,0"/>
            <Border x:Name="border_bottom" Grid.ColumnSpan="2"
                    BorderBrush="{DynamicResource ExpanderToggleButtonBottomBrush}" BorderThickness="0,0,0,1"/>
            <Border x:Name="border_over" Margin="1" Grid.ColumnSpan="2" Opacity="0"
                    Background="{DynamicResource ExpanderToggleButtonHoverBrush}"/>
            <Rectangle x:Name="arrow_over" Margin="0,1,1,1" Grid.Column="1" Width="20" Opacity="0"
                       Fill="{DynamicResource MouseOverBrush}"/>
            <Rectangle x:Name="arrow_focus" Margin="0,1,1,1" Grid.Column="1" Width="20" Opacity="0"
                       Fill="{DynamicResource MouseOverBrush}"/>
            <Path x:Name="arrow2" Margin="0,0,6,6" Grid.Column="1"
                  Stroke="{DynamicResource ExpanderToggleArrow2Stroke}" StrokeThickness="1.5"
                  HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 1,1.5 L 4.5,5 8,1.5 "
                  RenderTransformOrigin="0.5,0.5">
              <UIElement.RenderTransform>
                <TransformGroup>
                  <ScaleTransform/>
                  <SkewTransform/>
                  <RotateTransform/>
                  <TranslateTransform/>
                </TransformGroup>
              </UIElement.RenderTransform>
            </Path>
            <Path x:Name="arrow" Margin="0,2,6,0" Grid.Column="1"
                  Stroke="{DynamicResource ExpanderToggleArrowStroke}" StrokeThickness="1.5"
                  HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 1,1.5 L 4.5,5 8,1.5 "
                  RenderTransformOrigin="0.5,0.5">
              <UIElement.RenderTransform>
                <TransformGroup>
                  <ScaleTransform/>
                  <SkewTransform/>
                  <RotateTransform/>
                  <TranslateTransform/>
                </TransformGroup>
              </UIElement.RenderTransform>
            </Path>
            <ContentPresenter x:Name="header" Content="{TemplateBinding ContentControl.Content}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" VerticalAlignment="Center"
                              IsHitTestVisible="false" Margin="6,4,4,4"/>
            <Border x:Name="Focus_Border" Margin="-1,-1,-1,0" Grid.ColumnSpan="2"
                    BorderBrush="{DynamicResource FocusBrush}" BorderThickness="1" IsHitTestVisible="false"
                    Panel.ZIndex="1" Opacity="0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
              </TriggerBase.ExitActions>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Foreground" Value="#FF15428B"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="11"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
    <Setter Property="Control.Padding" Value="6,0,4,0"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="arrow_over" Storyboard.TargetProperty="Opacity"
                               To="1"/>
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="border_over" Storyboard.TargetProperty="Opacity"
                               To="1"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="arrow_over" Storyboard.TargetProperty="Opacity"
                               To="0"/>
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="border_over" Storyboard.TargetProperty="Opacity"
                               To="0"/>
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.1000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.1000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow2"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow2"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Focus_Border"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow_focus"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Focus_Border"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow_focus"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid SnapsToDevicePixels="false" Background="Transparent">
            <Grid.RowDefinitions>
              <RowDefinition Height="19"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border x:Name="border_fill" Grid.ColumnSpan="1" Grid.RowSpan="2"
                    Background="{DynamicResource ExpanderToggleButtonBrush}"/>
            <Border x:Name="border_inner" BorderBrush="#FFFFFFFF" BorderThickness="1,1,0,0" Grid.ColumnSpan="1"
                    Grid.RowSpan="2"/>
            <Border x:Name="border_bottom" BorderBrush="{DynamicResource ExpanderToggleButtonBrush}"
                    BorderThickness="0,0,0,1" Grid.ColumnSpan="1" Grid.RowSpan="2"/>
            <Border x:Name="border_over" Opacity="0" Grid.ColumnSpan="1" Grid.RowSpan="2"
                    Background="{DynamicResource ExpanderToggleButtonHoverBrush}"/>
            <Grid>
              <FrameworkElement.LayoutTransform>
                <TransformGroup>
                  <ScaleTransform ScaleX="1" ScaleY="1"/>
                  <SkewTransform AngleX="0" AngleY="0"/>
                  <RotateTransform Angle="0"/>
                  <TranslateTransform X="0" Y="0"/>
                </TransformGroup>
              </FrameworkElement.LayoutTransform>
              <Rectangle x:Name="arrow_focus" Margin="1" Grid.Column="1" Opacity="0" Fill="{DynamicResource MouseOverBrush}"/>
              <Rectangle x:Name="arrow_over" Margin="1" Grid.Column="1" Opacity="0" Fill="{DynamicResource MouseOverBrush}"/>
              <Path x:Name="arrow2" Margin="3,0,0,0" Grid.Column="1"
                    Stroke="{DynamicResource ExpanderToggleArrow2Stroke}" StrokeThickness="1.5"
                    HorizontalAlignment="Left" VerticalAlignment="Center" Data="M 1,1.5 L 4.5,5 8,1.5 "
                    RenderTransformOrigin="0.5,0.5">
                <UIElement.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform/>
                  </TransformGroup>
                </UIElement.RenderTransform>
              </Path>
              <Path x:Name="arrow" Margin="7,0,0,0" Grid.Column="1"
                    Stroke="{DynamicResource ExpanderToggleArrowStroke}" StrokeThickness="1.5"
                    HorizontalAlignment="Left" VerticalAlignment="Center" Data="M 1,1.5 L 4.5,5 8,1.5 "
                    RenderTransformOrigin="0.5,0.5">
                <UIElement.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform/>
                  </TransformGroup>
                </UIElement.RenderTransform>
              </Path>
            </Grid>
            <ContentPresenter SnapsToDevicePixels="true" HorizontalAlignment="Center" Margin="4,4,4,6" VerticalAlignment="Top"
                              Grid.Row="1" RecognizesAccessKey="true">
              <FrameworkElement.LayoutTransform>
                <TransformGroup>
                  <TransformGroup.Children>
                    <TransformCollection>
                      <RotateTransform Angle="-90"/>
                    </TransformCollection>
                  </TransformGroup.Children>
                </TransformGroup>
              </FrameworkElement.LayoutTransform>
            </ContentPresenter>
            <Border x:Name="Focus_Border" Margin="-1,-1,0,-1" Grid.ColumnSpan="2"
                    BorderBrush="{DynamicResource FocusBrush}" BorderThickness="1" IsHitTestVisible="false" Opacity="0"
                    Panel.ZIndex="1" Grid.RowSpan="2"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
              </TriggerBase.ExitActions>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Foreground" Value="#FF15428B"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="11"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
    <Setter Property="Control.Padding" Value="6,0,4,0"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="arrow_over" Storyboard.TargetProperty="Opacity"
                               To="1"/>
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="border_over" Storyboard.TargetProperty="Opacity"
                               To="1"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="arrow_over" Storyboard.TargetProperty="Opacity"
                               To="0"/>
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="border_over" Storyboard.TargetProperty="Opacity"
                               To="0"/>
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.1000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.1000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow2"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow2"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Focus_Border"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow_focus"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Focus_Border"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow_focus"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="border_fill" Grid.ColumnSpan="2" Background="{DynamicResource ExpanderToggleButtonBrush}"/>
            <Border x:Name="border_inner" Margin="0,1,0,0" Grid.ColumnSpan="2" BorderBrush="#FFFFFFFF"
                    BorderThickness="1,0,0,1"/>
            <Border x:Name="border_bottom" Grid.ColumnSpan="2"
                    BorderBrush="{DynamicResource ExpanderToggleButtonBottomBrush}" BorderThickness="0,1,0,0"/>
            <Border x:Name="border_over" Margin="1" Grid.ColumnSpan="2" Opacity="0"
                    Background="{DynamicResource ExpanderToggleButtonHoverBrush}"/>
            <Rectangle x:Name="arrow_over" Margin="0,1,1,1" Grid.Column="1" Width="20" Opacity="0"
                       Fill="{DynamicResource MouseOverBrush}"/>
            <Rectangle x:Name="arrow_focus" Margin="0,1,1,1" Grid.Column="1" Width="20" Opacity="0"
                       Fill="{DynamicResource MouseOverBrush}"/>
            <Path x:Name="arrow2" Margin="0,4,6,0" Grid.Column="1"
                  Stroke="{DynamicResource ExpanderToggleArrow2Stroke}" StrokeThickness="1.5"
                  HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 1,1.5 L 4.5,5 8,1.5 "
                  RenderTransformOrigin="0.5,0.5">
              <FrameworkElement.LayoutTransform>
                <TransformGroup>
                  <ScaleTransform ScaleX="1" ScaleY="1"/>
                  <SkewTransform AngleX="0" AngleY="0"/>
                  <RotateTransform Angle="180"/>
                  <TranslateTransform X="0" Y="0"/>
                </TransformGroup>
              </FrameworkElement.LayoutTransform>
              <UIElement.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleY="-1"/>
                  <SkewTransform/>
                  <RotateTransform/>
                  <TranslateTransform/>
                </TransformGroup>
              </UIElement.RenderTransform>
            </Path>
            <Path x:Name="arrow" Margin="0,0,6,4" Grid.Column="1"
                  Stroke="{DynamicResource ExpanderToggleArrowStroke}" StrokeThickness="1.5"
                  HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 1,1.5 L 4.5,5 8,1.5 "
                  RenderTransformOrigin="0.5,0.5">
              <FrameworkElement.LayoutTransform>
                <TransformGroup>
                  <ScaleTransform ScaleX="1" ScaleY="1"/>
                  <SkewTransform AngleX="0" AngleY="0"/>
                  <RotateTransform Angle="180"/>
                  <TranslateTransform X="0" Y="0"/>
                </TransformGroup>
              </FrameworkElement.LayoutTransform>
              <UIElement.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleY="-1"/>
                  <SkewTransform/>
                  <RotateTransform/>
                  <TranslateTransform/>
                </TransformGroup>
              </UIElement.RenderTransform>
            </Path>
            <ContentPresenter SnapsToDevicePixels="true" HorizontalAlignment="Center" Margin="6,4,4,4" VerticalAlignment="Top"
                              Grid.Row="1" RecognizesAccessKey="true"/>
            <Border x:Name="Focus_Border" Margin="-1,0,-1,-1" Grid.ColumnSpan="2"
                    BorderBrush="{DynamicResource FocusBrush}" BorderThickness="1" IsHitTestVisible="false"
                    Visibility="Visible" Panel.ZIndex="1" Opacity="0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
              </TriggerBase.ExitActions>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Foreground" Value="#FF15428B"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="11"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
    <Setter Property="Control.Padding" Value="6,0,4,0"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="arrow_over" Storyboard.TargetProperty="Opacity"
                               To="1"/>
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="border_over" Storyboard.TargetProperty="Opacity"
                               To="1"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="arrow_over" Storyboard.TargetProperty="Opacity"
                               To="0"/>
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="border_over" Storyboard.TargetProperty="Opacity"
                               To="0"/>
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.1000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.1000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow2"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4000000" Duration="00:00:00.0010000" Storyboard.TargetName="arrow2"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Focus_Border"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow_focus"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Focus_Border"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow_focus"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid SnapsToDevicePixels="false" Background="Transparent">
            <Grid.RowDefinitions>
              <RowDefinition Height="19"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border x:Name="border_fill" Grid.RowSpan="2" Background="{DynamicResource ExpanderToggleButtonBrush}"/>
            <Border x:Name="border_inner" BorderBrush="#FFFFFFFF" BorderThickness="0,1,1,0" Grid.RowSpan="2"/>
            <Border x:Name="border_bottom" BorderBrush="{DynamicResource ExpanderToggleButtonBottomBrush}"
                    BorderThickness="0,0,0,1" Grid.RowSpan="2"/>
            <Border x:Name="border_over" Opacity="0" Grid.RowSpan="2"
                    Background="{DynamicResource ExpanderToggleButtonHoverBrush}"/>
            <Grid>
              <FrameworkElement.LayoutTransform>
                <TransformGroup>
                  <ScaleTransform ScaleX="1" ScaleY="1"/>
                  <SkewTransform AngleX="0" AngleY="0"/>
                  <RotateTransform Angle="0"/>
                  <TranslateTransform X="0" Y="0"/>
                </TransformGroup>
              </FrameworkElement.LayoutTransform>
              <Rectangle x:Name="arrow_over" Margin="1" Opacity="0" Fill="{DynamicResource MouseOverBrush}"/>
              <Rectangle x:Name="arrow_focus" Margin="1" Opacity="0" Fill="{DynamicResource MouseOverBrush}"/>
              <Path x:Name="arrow2" Margin="3,0,0,0" Stroke="{DynamicResource ExpanderToggleArrow2Stroke}"
                    StrokeThickness="1.5" HorizontalAlignment="Left" VerticalAlignment="Center"
                    Data="M 1,1.5 L 4.5,5 8,1.5 " RenderTransformOrigin="0.5,0.5">
                <UIElement.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                  </TransformGroup>
                </UIElement.RenderTransform>
              </Path>
              <Path x:Name="arrow" Margin="7,0,0,0" Stroke="{DynamicResource ExpanderToggleArrowStroke}"
                    StrokeThickness="1.5" HorizontalAlignment="Left" VerticalAlignment="Center"
                    Data="M 1,1.5 L 4.5,5 8,1.5 " RenderTransformOrigin="0.5,0.5">
                <UIElement.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                  </TransformGroup>
                </UIElement.RenderTransform>
              </Path>
            </Grid>
            <ContentPresenter SnapsToDevicePixels="true" HorizontalAlignment="Center" Margin="6,4,4,4" VerticalAlignment="Top"
                              Grid.Row="1" RecognizesAccessKey="true">
              <FrameworkElement.LayoutTransform>
                <TransformGroup>
                  <TransformGroup.Children>
                    <TransformCollection>
                      <RotateTransform Angle="90"/>
                    </TransformCollection>
                  </TransformGroup.Children>
                </TransformGroup>
              </FrameworkElement.LayoutTransform>
            </ContentPresenter>
            <Border x:Name="Focus_Border" Margin="0,-1,-1,-1" Grid.RowSpan="2"
                    BorderBrush="{DynamicResource FocusBrush}" BorderThickness="1" IsHitTestVisible="false" Opacity="0"
                    Panel.ZIndex="1"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
              </TriggerBase.ExitActions>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Expander}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground" Value="#FF15428B"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="11"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
    <Setter Property="Control.Padding" Value="6,0,4,0"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Grid>
            <Border x:Name="Background" BorderThickness="1" Padding="0">
              <DockPanel>
                <ToggleButton x:Name="HeaderSite" FontFamily="{TemplateBinding Control.FontFamily}"
                              FontSize="{TemplateBinding Control.FontSize}" FontStretch="{TemplateBinding Control.FontStretch}"
                              FontStyle="{TemplateBinding Control.FontStyle}" FontWeight="{TemplateBinding Control.FontWeight}"
                              Foreground="{TemplateBinding Control.Foreground}"
                              HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Padding="{TemplateBinding Control.Padding}"
                              VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Margin="1,1,1,0" MinHeight="0"
                              MinWidth="0" Style="{StaticResource ExpanderDownHeaderStyle}"
                              Content="{TemplateBinding HeaderedContentControl.Header}"
                              ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                              ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}"
                              DockPanel.Dock="Top"
                              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Border x:Name="border" Visibility="Collapsed" Margin="1,1,1,1" BorderBrush="#FF848484"
                        BorderThickness="1,1,1,1" CornerRadius="1,1,1,1"
                        Background="{DynamicResource ControlBackgroundBrush}">
                  <ContentPresenter x:Name="ExpandSite" Focusable="false"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,1,1,1"
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" DockPanel.Dock="Bottom"/>
                </Border>
              </DockPanel>
            </Border>
            <Border x:Name="DisabledVisualElement" IsHitTestVisible="false"
                    Background="{DynamicResource DisabledBackgroundBrush}"
                    BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1" Opacity="0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Expander.IsExpanded" Value="true">
              <Setter TargetName="border" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Down"/>
            <Trigger Property="Expander.ExpandDirection" Value="Right">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right"/>
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left"/>
              <Setter TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"
                      Property="FrameworkElement.Style"/>
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Up">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top"/>
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom"/>
              <Setter TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"
                      Property="FrameworkElement.Style"/>
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Left">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left"/>
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right"/>
              <Setter TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"
                      Property="FrameworkElement.Style"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <FrameworkTemplate.Resources>
      <Storyboard x:Key="HoverOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="rectangleOver"
                         Storyboard.TargetProperty="Opacity" To="0.8"/>
        <ColorAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Background"
                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#FFFFFFFF"/>
      </Storyboard>
      <Storyboard x:Key="HoverOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="rectangleOver"
                         Storyboard.TargetProperty="Opacity" To="0"/>
        <ColorAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Background"
                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#FFE8E8E8"/>
      </Storyboard>
      <Storyboard x:Key="PressedOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="rectanglePress"
                         Storyboard.TargetProperty="Opacity" To="0.8"/>
        <ColorAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Background"
                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#FFFFFFFF"/>
      </Storyboard>
      <Storyboard x:Key="PressedOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="rectanglePress"
                         Storyboard.TargetProperty="Opacity" To="0"/>
        <ColorAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Background"
                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#FFE8E8E8"/>
      </Storyboard>
      <Storyboard x:Key="CheckedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundChecked"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="CheckedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundChecked"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </FrameworkTemplate.Resources>
    <Grid x:Name="grid">
      <Rectangle x:Name="Background" Fill="#FFE8E8E8" Stroke="#FF848484" IsHitTestVisible="false"/>
      <Rectangle x:Name="BackgroundChecked" Margin="1" IsHitTestVisible="false" Opacity="0">
        <Shape.Fill>
          <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
        </Shape.Fill>
      </Rectangle>
      <Rectangle x:Name="rectangleOver" Width="15" Stroke="#FFE8E8E8" HorizontalAlignment="Right" Opacity="0"
                 Fill="{DynamicResource MouseOverBrush}"/>
      <Rectangle x:Name="rectanglePress" Width="15" Stroke="#FC9E9D9B" HorizontalAlignment="Right" Opacity="0"
                 Fill="{DynamicResource PressedBrush}"/>
      <Rectangle x:Name="DisabledVisualElement" Margin="1" Fill="{DynamicResource DisabledBackgroundBrush}"
                 IsHitTestVisible="false" Visibility="Collapsed"/>
      <Path x:Name="BtnArrow" Margin="0,0,4,0" Width="6" Fill="{DynamicResource GlyphBrush}" Stretch="Uniform"
            HorizontalAlignment="Right"
            Data="F1 M 301.14,-189.041 L 311.57,-189.041 306.355,-182.942 301.14,-189.041 Z"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="ToggleButton.IsChecked" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground"/>
        <Setter TargetName="DisabledVisualElement" Property="UIElement.Visibility" Value="Visible"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
    <Border x:Name="PART_ContentHost" Focusable="false" Background="{TemplateBinding Control.Background}"/>
  </ControlTemplate>
  <Style TargetType="{x:Type ComboBox}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.Padding" Value="6,2,25,2"/>
    <Setter Property="Control.Template" Value="{DynamicResource ComboBoxTemplate}"/>
  </Style>
  <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
    <FrameworkTemplate.Resources>
      <Storyboard x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </FrameworkTemplate.Resources>
    <Grid>
      <ToggleButton x:Name="ToggleButton" Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}"
                    Focusable="false" ClickMode="Press"
                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
      <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Left" Margin="3,3,23,3" VerticalAlignment="Center"
                        Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                        ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                        IsHitTestVisible="false"/>
      <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}"
               HorizontalAlignment="Left" Margin="3,3,23,3" VerticalAlignment="Center" Focusable="true"
               Background="Transparent" IsReadOnly="{TemplateBinding ComboBox.IsReadOnly}" Style="{x:Null}"/>
      <Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource DisabledBackgroundBrush}"
                 Stroke="{DynamicResource DisabledBorderBrush}" RadiusX="0" RadiusY="0" IsHitTestVisible="false"
                 Opacity="0"/>
      <Rectangle x:Name="FocusVisualElement" Margin="-1" Stroke="{DynamicResource FocusBrush}" StrokeThickness="1"
                 IsHitTestVisible="false" Opacity="0"/>
      <Popup x:Name="Popup" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Placement="Bottom"
             Focusable="false" AllowsTransparency="true" PopupAnimation="Slide" Margin="0,1,0,0">
        <Grid x:Name="DropDown" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
              MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" SnapsToDevicePixels="true">
          <Border x:Name="DropDownBorder" Margin="0,-1,0,0" BorderBrush="{DynamicResource ControlBorderBrush}"
                  BorderThickness="1" CornerRadius="0,0,3,3" Background="{DynamicResource ControlBackgroundBrush}">
            <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="true" HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Auto" CanContentScroll="true">
              <StackPanel IsItemsHost="true" KeyboardNavigation.DirectionalNavigation="Contained"/>
            </ScrollViewer>
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsFocused" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource FocusedOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="ItemsControl.HasItems" Value="false">
        <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground"/>
        <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="1"/>
      </Trigger>
      <Trigger Property="ItemsControl.IsGrouping" Value="true">
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </Trigger>
      <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
        <Setter TargetName="DropDownBorder" Property="Border.CornerRadius" Value="4"/>
        <Setter TargetName="DropDownBorder" Property="FrameworkElement.Margin" Value="0,2,0,0"/>
      </Trigger>
      <Trigger Property="ComboBox.IsEditable" Value="true">
        <Setter Property="Control.IsTabStop" Value="false"/>
        <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type ComboBoxItem}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="3"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HighlightOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientOver"
                               Storyboard.TargetProperty="Opacity" To="0.73"/>
            </Storyboard>
            <Storyboard x:Key="HighlightOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientOver"
                               Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected"
                               Storyboard.TargetProperty="Opacity" To="0.84"/>
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelected"
                               Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="BackgroundGradientOver" RadiusX="1" RadiusY="1"
                       Stroke="{DynamicResource MouseOverBorderBrush}" Opacity="0" Fill="{DynamicResource MouseOverBrush}"/>
            <Rectangle x:Name="BackgroundGradientSelected" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0"
                       Fill="{DynamicResource PressedBrush}" Stroke="{DynamicResource PressedBorderBrush}"/>
            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding ContentControl.Content}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Selector.IsSelected" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="SelectedOn_BeginStoryboard1" Storyboard="{StaticResource SelectedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HighlightOff_BeginStoryboard1" Storyboard="{StaticResource HighlightOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HighlightOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ProgressBar}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="IndeterminateOn" RepeatBehavior="Forever">
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateGradientFill"
                                             Storyboard.TargetProperty="(Shape.Fill).(Brush.Transform).(TransformGroup.Children)[0].X"
                                             RepeatBehavior="Forever">
                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:.5" Value="20"/>
              </DoubleAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="IndeterminateRoot"
                                             Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid>
            <Border x:Name="PART_Track" BorderThickness="1" CornerRadius="3" Opacity="0.825">
              <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FFFFFFFF"/>
                  <GradientStop Color="#FFD8D8D8" Offset="0.327"/>
                  <GradientStop Color="#FFDADADA" Offset="0.488"/>
                  <GradientStop Color="#FFBEBEBE" Offset="0.539"/>
                  <GradientStop Color="#FFD6D6D6" Offset="0.77"/>
                  <GradientStop Color="#FFFFFFFF" Offset="1"/>
                </LinearGradientBrush>
              </Border.Background>
              <Border.BorderBrush>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FFBBBBBB" Offset="0"/>
                  <GradientStop Color="#FF7E7E7E" Offset="1"/>
                </LinearGradientBrush>
              </Border.BorderBrush>
            </Border>
            <Rectangle x:Name="PART_Indicator" Margin="1" RadiusX="1.5" RadiusY="1.5" HorizontalAlignment="Left"
                       Opacity="0.83" Fill="{DynamicResource ProgressBarIndicatorBrush}"/>
            <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
              <Rectangle x:Name="IndeterminateSolidFill" Margin="1" Fill="#FFFF8900" RadiusX="2" RadiusY="2"/>
              <Rectangle x:Name="ProgressBarRootGradient" Margin="1" Panel.ZIndex="1" RadiusX="1.5" RadiusY="1.5">
                <Shape.Fill>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#69535353" Offset="0"/>
                    <GradientStop Color="#FFFDCE9D" Offset="0.046"/>
                    <GradientStop Color="#96FFE4B6" Offset="0.18"/>
                    <GradientStop Color="#4FFFFFFF" Offset="0.507"/>
                    <GradientStop Color="#00D6D6D6" Offset="0.516"/>
                    <GradientStop Color="#FFFFC472" Offset="1"/>
                  </LinearGradientBrush>
                </Shape.Fill>
              </Rectangle>
              <Rectangle x:Name="IndeterminateGradientFill" Margin="1" StrokeThickness="1" RadiusX="2" RadiusY="2"
                         Opacity="0.7">
                <Shape.Fill>
                  <LinearGradientBrush EndPoint="0,1" StartPoint="20,1" MappingMode="Absolute" SpreadMethod="Repeat">
                    <Brush.Transform>
                      <TransformGroup>
                        <TranslateTransform X="0"/>
                        <SkewTransform AngleX="-10"/>
                      </TransformGroup>
                    </Brush.Transform>
                    <GradientStop Color="#FFFFE3BB" Offset="0.088"/>
                    <GradientStop Color="#00FF9500" Offset="0.475"/>
                    <GradientStop Color="#FFFFE3BB" Offset="0.899"/>
                  </LinearGradientBrush>
                </Shape.Fill>
              </Rectangle>
            </Grid>
            <Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Background="#A5FFFFFF"
                    BorderBrush="#66FFFFFF" BorderThickness="1" Opacity="0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="true">
              <TriggerBase.ExitActions>
                <StopStoryboard BeginStoryboardName="IndeterminateOn_BeginStoryboard"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="IndeterminateOn_BeginStoryboard" Storyboard="{StaticResource IndeterminateOn}"/>
              </TriggerBase.EnterActions>
              <Setter TargetName="PART_Track" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_Indicator" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type TextBox}">
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="Control.Background">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.Padding" Value="4"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource TextControlBorderBrush}"/>
    <Setter Property="Control.Template" Value="{DynamicResource TextBoxTemplate}"/>
  </Style>
  <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBox}">
    <FrameworkTemplate.Resources>
      <Storyboard x:Key="HoverOn">
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="1"/>
        <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Over_Border" Storyboard.TargetProperty="Opacity"
                         To="1"/>
      </Storyboard>
      <Storyboard x:Key="HoverOff">
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="0"/>
        <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Over_Border" Storyboard.TargetProperty="Opacity"
                         To="0"/>
      </Storyboard>
      <Storyboard x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="DisabledOn">
        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Visibility)">
          <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="DisabledOff">
        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Visibility)">
          <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Collapsed}"/>
        </ObjectAnimationUsingKeyFrames>
      </Storyboard>
    </FrameworkTemplate.Resources>
    <Grid>
      <Border x:Name="BorderBase" Background="{TemplateBinding Control.Background}"
              BorderBrush="{TemplateBinding Control.BorderBrush}"
              BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2.75"/>
      <Border x:Name="Over" BorderBrush="{DynamicResource FocusBrush}"
              BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2.75" Opacity="0"/>
      <Border x:Name="Over_Border" Margin="-1" BorderBrush="{DynamicResource MouseOverHighlightBrush}"
              BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3.75"
              IsHitTestVisible="false" Opacity="0"/>
      <ScrollViewer x:Name="PART_ContentHost" Margin="0" Foreground="{DynamicResource OutsideFontColor}"/>
      <Border x:Name="DisabledVisualElement" Background="#A5FFFFFF" BorderBrush="#59C0C0C0"
              BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2.75"
              IsHitTestVisible="false" Visibility="Collapsed"/>
      <Border x:Name="ReadOnlyVisualElement" Background="#66FFFFFF" CornerRadius="2.75" Visibility="Collapsed"/>
      <Border x:Name="FocusVisualElement" BorderBrush="#FFB1703C"
              BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2.75"
              IsHitTestVisible="false" Opacity="0"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsFocused" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
          <Condition Property="UIElement.IsFocused" Value="false"/>
        </MultiTrigger.Conditions>
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
        </TriggerBase.EnterActions>
      </MultiTrigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <TriggerBase.EnterActions>
          <BeginStoryboard x:Name="DisabledOn_BeginStoryboard" Storyboard="{StaticResource DisabledOn}"/>
        </TriggerBase.EnterActions>
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="true">
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource DisabledOff}"/>
        </TriggerBase.EnterActions>
        <Setter Property="Control.Foreground" Value="#FF000000"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type PasswordBox}">
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="Control.Background">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.Padding" Value="4"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource TextControlBorderBrush}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="1"/>
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Over_Border" Storyboard.TargetProperty="Opacity"
                               To="1"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="0"/>
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Over_Border" Storyboard.TargetProperty="Opacity"
                               To="0"/>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="DisabledOn">
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement"
                                             Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid>
            <Border x:Name="BorderBase" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2.75"/>
            <Border x:Name="Over" BorderBrush="{DynamicResource FocusBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2.75" Opacity="0"/>
            <Border x:Name="Over_Border" Margin="-1" BorderBrush="{DynamicResource MouseOverHighlightBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3.75"
                    IsHitTestVisible="false" Opacity="0"/>
            <ScrollViewer x:Name="PART_ContentHost" Margin="0" Foreground="{DynamicResource OutsideFontColor}"/>
            <Border x:Name="DisabledVisualElement" Background="#A5FFFFFF" BorderBrush="#59C0C0C0"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2.75"
                    IsHitTestVisible="false" Visibility="Collapsed"/>
            <Border x:Name="ReadOnlyVisualElement" Background="#66FFFFFF" CornerRadius="2.75" Visibility="Collapsed"/>
            <Border x:Name="FocusVisualElement" BorderBrush="#FFB1703C"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2.75"
                    IsHitTestVisible="false" Opacity="0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="UIElement.IsFocused" Value="false"/>
              </MultiTrigger.Conditions>
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="DisabledOn_BeginStoryboard" Storyboard="{StaticResource DisabledOn}"/>
              </TriggerBase.EnterActions>
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type RichTextBox}">
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="Control.Background">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.Padding" Value="4"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource TextControlBorderBrush}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RichTextBox}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="1"/>
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Over_Border" Storyboard.TargetProperty="Opacity"
                               To="1"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="0"/>
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Over_Border" Storyboard.TargetProperty="Opacity"
                               To="0"/>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="DisabledOn">
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement"
                                             Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid>
            <Border x:Name="BorderBase" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2.75"/>
            <Border x:Name="Over" BorderBrush="{DynamicResource FocusBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2.75" Opacity="0"/>
            <Border x:Name="Over_Border" Margin="-1" BorderBrush="{DynamicResource MouseOverHighlightBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3.75"
                    IsHitTestVisible="false" Opacity="0"/>
            <ScrollViewer x:Name="PART_ContentHost" Margin="0" Foreground="{DynamicResource OutsideFontColor}"/>
            <Border x:Name="DisabledVisualElement" Background="#A5FFFFFF" BorderBrush="#59C0C0C0"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2.75"
                    IsHitTestVisible="false" Visibility="Collapsed"/>
            <Border x:Name="ReadOnlyVisualElement" Background="#66FFFFFF" CornerRadius="2.75" Visibility="Collapsed"/>
            <Border x:Name="FocusVisualElement" BorderBrush="#FFB1703C"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2.75"
                    IsHitTestVisible="false" Opacity="0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="UIElement.IsFocused" Value="false"/>
              </MultiTrigger.Conditions>
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="DisabledOn_BeginStoryboard" Storyboard="{StaticResource DisabledOn}"/>
              </TriggerBase.EnterActions>
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Label}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Label}">
          <Grid>
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="true"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Menu}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Grid>
            <Border x:Name="Border" Margin="1" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"/>
            <StackPanel IsItemsHost="true" ClipToBounds="true" Orientation="Horizontal"
                        Background="{DynamicResource TabControlHeaderBrush}"/>
            <Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Background="#A5FFFFFF"
                    BorderBrush="#66FFFFFF" BorderThickness="1" Opacity="0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DropShadowBitmapEffect x:Key="PopupDropShadow" ShadowDepth="1.5" Softness="0.15"/>
  <Style TargetType="{x:Type MenuItem}">
    <Style.Triggers>
      <Trigger Property="MenuItem.IsHighlighted" Value="true">
        <Setter Property="Control.Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{DynamicResource BlackColor}"/>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
    <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Foreground" Value="#FFFFFFFF"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HighlightOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundGradientOver"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HighlightOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundGradientOver"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Border x:Name="Border" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                <ColumnDefinition Width="14"/>
              </Grid.ColumnDefinitions>
              <ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
              <Grid x:Name="GlyphPanel" Visibility="Hidden" Margin="4,0,6,0" VerticalAlignment="Center">
                <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Control.Foreground}"
                      Data="M 0,2 L 0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6 Z" FlowDirection="LeftToRight"/>
              </Grid>
              <Rectangle x:Name="BackgroundGradientOver" Grid.Column="0" Grid.ColumnSpan="4" Stroke="#FFDBCE99" Opacity="0"
                         Fill="{DynamicResource MouseOverBrush}"/>
              <ContentPresenter x:Name="HeaderHost" Grid.Column="1" Margin="{TemplateBinding Control.Padding}"
                                RecognizesAccessKey="true" ContentSource="Header"/>
              <Grid x:Name="ArrowPanel" Column="3" Margin="4,0,6,0" VerticalAlignment="Center">
                <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Control.Foreground}"
                      Data="M 0,0 L 0,8 4,4 Z"/>
              </Grid>
              <Popup x:Name="SubMenuPopup" Placement="Right" Focusable="false" AllowsTransparency="true"
                     PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                     VerticalOffset="-3"
                     IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <Grid x:Name="SubMenu">
                  <Border x:Name="SubMenuBorder" Background="{DynamicResource TabControlHeaderBrush}"
                          BorderBrush="{DynamicResource ControlBorderBrush}" BorderThickness="1"/>
                  <StackPanel IsItemsHost="true" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                </Grid>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
              <Setter Property="FrameworkElement.Margin" Value="0,1,0,1"/>
              <Setter Property="Control.Padding" Value="6,3,6,3"/>
              <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
              <Setter TargetName="SubMenuPopup" Property="Popup.Placement" Value="Bottom"/>
              <Setter TargetName="ArrowPanel" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="TopLevelItem">
              <Setter Property="FrameworkElement.Margin" Value="0,1,0,1"/>
              <Setter Property="Control.Padding" Value="6,3,6,3"/>
              <Setter TargetName="ArrowPanel" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
              <Setter Property="DockPanel.Dock" Value="Top"/>
              <Setter Property="Control.Padding" Value="0,2,0,2"/>
              <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuItem">
              <Setter Property="DockPanel.Dock" Value="Top"/>
              <Setter Property="Control.Padding" Value="0,2,0,2"/>
              <Setter TargetName="ArrowPanel" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
              <Setter TargetName="SubMenuPopup" Property="Popup.PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Value="{x:Null}" Property="MenuItem.Icon">
              <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="MenuItem.IsChecked" Value="true">
              <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger SourceName="SubMenuPopup" Property="Popup.AllowsTransparency" Value="true">
              <Setter TargetName="SubMenu" Property="FrameworkElement.Margin" Value="0,0,3,3"/>
              <Setter TargetName="SubMenu" Property="UIElement.SnapsToDevicePixels" Value="true"/>
              <Setter Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder"
                      Property="UIElement.BitmapEffect"/>
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HighlightOff_BeginStoryboard" Storyboard="{StaticResource HighlightOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HighlightOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Separator}">
    <Setter Property="FrameworkElement.Height" Value="1"/>
    <Setter Property="FrameworkElement.Margin" Value="0,2,0,2"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border BorderBrush="#FFB1703C" BorderThickness="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type TabControl}">
    <Setter Property="Control.Background" Value="#FFFFFFFF"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.Padding" Value="5"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0"/>
              <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
              <RowDefinition x:Name="RowDefinition1" Height="*"/>
            </Grid.RowDefinitions>
            <Border x:Name="border" Background="{DynamicResource TabControlHeaderBrush}" CornerRadius="2,2,0,0"
                    Margin="0,0,0,-2" Panel.ZIndex="100">
              <TabPanel x:Name="HeaderPanel" IsItemsHost="true" ZIndex="1" KeyboardNavigation.TabIndex="1"
                        RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto" Margin="4,0,0,0">
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="0"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <UIElement.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </UIElement.RenderTransform>
              </TabPanel>
            </Border>
            <Border x:Name="ContentPanel" Grid.Row="1" Background="{DynamicResource TabControlContentBrush}"
                    BorderBrush="{DynamicResource TabControlContentBorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3,3,1,1">
              <ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto"/>
              <Setter TargetName="border" Property="Grid.Row" Value="1"/>
              <Setter TargetName="ContentPanel" Property="Border.CornerRadius" Value="2,2,0,0"/>
              <Setter TargetName="border" Property="Border.CornerRadius" Value="0,0,2,2"/>
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="4,-2.5,0,0"/>
              <Setter TargetName="border" Property="FrameworkElement.Margin" Value="0,0,0,0"/>
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Left">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1"/>
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto"/>
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*"/>
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0"/>
              <Setter TargetName="border" Property="Grid.Column" Value="0"/>
              <Setter TargetName="border" Property="FrameworkElement.Margin" Value="0,0,0,0"/>
              <Setter TargetName="ContentPanel" Property="FrameworkElement.Margin" Value="0,0,0,0"/>
              <Setter TargetName="border" Property="Border.CornerRadius" Value="0,2,2,0"/>
              <Setter TargetName="ContentPanel" Property="Border.CornerRadius" Value="0,2,2,0"/>
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="4,0,-2.5,0"/>
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Right">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0"/>
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*"/>
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto"/>
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0"/>
              <Setter TargetName="border" Property="Grid.Column" Value="1"/>
              <Setter TargetName="ContentPanel" Property="Border.CornerRadius" Value="2,0,0,2"/>
              <Setter TargetName="border" Property="Border.CornerRadius" Value="0,2,2,0"/>
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="-3,0,0,0"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type TabItem}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="10,6,10,6"/>
    <Setter Property="FrameworkElement.MinWidth" Value="5"/>
    <Setter Property="FrameworkElement.MinHeight" Value="5"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedState"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UnSelectedState"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UnSelectedState"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedState"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopUnselectedOver"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopUnselectedBorderOver"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopUnselectedOver"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopUnselectedBorderOver"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualTop"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualTop"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid x:Name="grid" Margin="2,1,2,0">
            <FrameworkElement.LayoutTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
                <SkewTransform AngleX="0" AngleY="0"/>
                <RotateTransform Angle="0"/>
                <TranslateTransform X="0" Y="0"/>
              </TransformGroup>
            </FrameworkElement.LayoutTransform>
            <Grid>
              <Grid x:Name="UnSelectedState" Margin="1,0,1,0">
                <Border x:Name="TopUnselectedOver" BorderBrush="{DynamicResource TabItemHoverBorderBrush}"
                        BorderThickness="1,1,1,0" CornerRadius="2.21,2.21,.5,.5" Opacity="0"
                        Background="{DynamicResource TabItemHoverBrush}"/>
                <Border x:Name="TopUnselectedBorderOver" Margin="-1,-1,-1,0.5"
                        BorderBrush="{DynamicResource TabItemHoverHighlightBrush}" BorderThickness="1,1,1,0"
                        CornerRadius="3.5,3.5,0,0" Opacity="0"/>
              </Grid>
              <Grid x:Name="SelectedState" Margin="1,0,1,-1" Opacity="0">
                <Border x:Name="BackgroundTop" BorderBrush="{DynamicResource TabItemSelectedBorderBrush}"
                        BorderThickness="2,0,2,0" CornerRadius="3,3,0,0"
                        Background="{DynamicResource TabItemSelectedBrush}"/>
                <Border x:Name="BorderTop" BorderThickness="2,0,2,0" CornerRadius="3,3,0,0"
                        BorderBrush="{DynamicResource TabItemBorderTopBrush}"/>
                <Border x:Name="HighlightTop" Margin="2,0,2,0" BorderThickness="1,3,1,0" CornerRadius="1.25,1.25,0,0"
                        BorderBrush="{DynamicResource TabItemHighlightTopBrush}"/>
                <Border x:Name="BorderTop2" Margin="-1,0,-1,0" BorderBrush="{DynamicResource TabItemBorderTop2Brush}"
                        BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" IsHitTestVisible="false"/>
                <Border x:Name="FocusVisualTop" Margin="-1,0,-1,0" BorderThickness="3,2,3,0" CornerRadius="3,3,0,0"
                        Opacity="0" BorderBrush="{DynamicResource TabItemFocusBrush}"/>
              </Grid>
              <Border x:Name="DisabledVisualTopSelected" Margin="1,0,1,0"
                      Background="{DynamicResource DisabledBackgroundBrush}" CornerRadius="3,3,0,0"
                      IsHitTestVisible="false" Visibility="Collapsed"/>
              <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" Margin="{TemplateBinding Control.Padding}"
                                VerticalAlignment="Center" RecognizesAccessKey="true" ContentSource="Header"/>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Left">
              <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Right">
              <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentSite" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="180"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="180"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="Selector.IsSelected" Value="false"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="TabItem.IsSelected" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource SelectedOn}"/>
              </TriggerBase.EnterActions>
              <Setter Property="Panel.ZIndex" Value="100"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="grid" Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="Selector.IsSelected" Value="true"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Foreground">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Selector.IsSelected" Value="true">
        <Setter Property="Control.Foreground" Value="{DynamicResource OutsideFontColor}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="NuclearSliderThumb" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.Height" Value="21"/>
    <Setter Property="FrameworkElement.Width" Value="15"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="1"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Over" Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Press" Storyboard.TargetProperty="Opacity"
                               To="1"/>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Press" Storyboard.TargetProperty="Opacity"
                               To="0"/>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid>
            <Path x:Name="Base" Margin="1,1.312,1,0.375" Fill="{DynamicResource SliderThumbBrush}" Stretch="Fill"
                  Stroke="{DynamicResource SliderThumbBorderBrush}" StrokeThickness="1" StrokeLineJoin="Round"
                  Data="M -9.958333,0.78716499 L -3.204694,0.78717428 -3.2052999,1.4266928 -6.6465902,1.7712332 -9.9818907,1.433604 Z"/>
            <Path x:Name="Over" Margin="2,2.312,2,1.375" Fill="{DynamicResource MouseOverBrush}" Stretch="Fill"
                  Data="M -9.958333,0.78716499 L -3.204694,0.78717428 -3.2052999,1.4276805 -6.6465902,1.7722208 -9.9818907,1.4345917 Z"
                  Opacity="0"/>
            <Path x:Name="Press" Margin="2,2.312,2,1.375" Fill="{DynamicResource PressedBrush}" Stretch="Fill"
                  Data="M -9.958333,0.78716499 L -3.204694,0.78717428 -3.2052999,1.4276805 -6.6465902,1.7722208 -9.9818907,1.4345917 Z"
                  Opacity="0"/>
            <Path x:Name="whiteGradient" Margin="2,2.312,2,1.375" Stretch="Fill"
                  Data="M -9.958333,0.78716499 L -3.204694,0.78717428 -3.2052999,1.4276805 -6.6465902,1.7722208 -9.9818907,1.4345917 Z">
              <Shape.Fill>
                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.563,0.979">
                  <GradientStop Color="#5FFFFFFF" Offset="0"/>
                  <GradientStop Color="#5FFFFFFF" Offset="0.259"/>
                  <GradientStop Color="#00FFFFFF" Offset="0.393"/>
                  <GradientStop Color="#00FFFFFF" Offset="0.643"/>
                  <GradientStop Color="#75FFFFFF" Offset="0.75"/>
                  <GradientStop Color="#99FFFFFF" Offset="1"/>
                </LinearGradientBrush>
              </Shape.Fill>
            </Path>
            <Path x:Name="Line" Margin="-1,-2,0,0" Height="10" Width="1" Stretch="Fill" Stroke="#FF6B81A0"
                  StrokeThickness="1" Data="M 5.4375,2.6875 L 5.4375,12.1875 " VerticalAlignment="Center"
                  HorizontalAlignment="Center"/>
            <Path x:Name="Line2" Margin="0,-2,-1,0" Height="10" Width="1" Stretch="Fill" Stroke="#FFFFFFFF"
                  StrokeThickness="1" Data="M 5.4375,2.6875 L 5.4375,12.1875 " VerticalAlignment="Center"
                  HorizontalAlignment="Center"/>
            <Path x:Name="DisabledVisualElement" Margin="1,1.312,1,0.375" Fill="#FFFFFFFF" Stroke="#FFFFFFFF"
                  StrokeThickness="1" StrokeLineJoin="Round" Stretch="Fill" Opacity="0"
                  Data="M -9.958333,0.78716499 L -3.204694,0.78717428 -3.2052999,1.4266928 -6.6465902,1.7712332 -9.9818907,1.433604 Z"
                  IsHitTestVisible="false"/>
            <Path x:Name="FocusVisualElement" Stretch="Fill" Stroke="{DynamicResource FocusBrush}"
                  StrokeThickness="1" StrokeLineJoin="Round"
                  Data="M -9.958333,0.78716499 L -3.204694,0.78717428 -3.2052999,1.4276805 -6.6465902,1.7722208 -9.9818907,1.4345917 Z"
                  IsHitTestVisible="false" Opacity="0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard1" Storyboard="{StaticResource FocusedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard1" Storyboard="{StaticResource FocusedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Slider}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <Grid x:Name="GridRoot">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TickBar x:Name="TopTick" Visibility="Collapsed" Height="4" SnapsToDevicePixels="true" Placement="Top"
                     Fill="#FF405A78"/>
            <Rectangle Margin="7.5,0,7.5,0" Grid.Column="0" Height="6" RadiusX="3" RadiusY="3" Grid.Row="1"
                       Fill="{DynamicResource SliderBackgroundBrush}"/>
            <Track x:Name="PART_Track" Grid.Row="1">
              <Track.Thumb>
                <Thumb Style="{DynamicResource NuclearSliderThumb}"/>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="Slider.IncreaseLarge"/>
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="Slider.DecreaseLarge"/>
              </Track.DecreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick" Visibility="Collapsed" Grid.Row="2" Height="4" SnapsToDevicePixels="true"
                     Placement="Bottom" Fill="{TemplateBinding Control.Foreground}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Slider.TickPlacement" Value="TopLeft">
              <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="BottomRight">
              <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="Both">
              <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="GridRoot" Property="UIElement.Opacity" Value="0.65"/>
            </Trigger>
            <Trigger Property="Slider.Orientation" Value="Vertical">
              <Setter TargetName="GridRoot" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_Track" Property="Track.Orientation" Value="Horizontal"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type TreeView}">
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}"/>
    <Setter Property="Control.Foreground" Value="Black"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Padding" Value="4"/>
    <Setter Property="FrameworkElement.Cursor" Value="Arrow"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeView}">
          <Grid>
            <Border x:Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2"
                    Background="{DynamicResource ControlBackgroundBrush}">
              <ScrollViewer Focusable="false" Background="{TemplateBinding Control.Background}" Padding="4"
                            HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="false">
                <ItemsPresenter/>
              </ScrollViewer>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NuclearTreeViewItemToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <ColorAnimation Duration="0" Storyboard.TargetName="UncheckedVisual"
                              Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#FFFFCB66"/>
              <ColorAnimation Duration="0" Storyboard.TargetName="UncheckedVisual"
                              Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#FFFFCB66"/>
              <ColorAnimation Duration="0" Storyboard.TargetName="CheckedVisual"
                              Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#FFFFCB66"/>
              <ColorAnimation Duration="0" Storyboard.TargetName="CheckedVisual"
                              Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#FFFFCB66"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <ColorAnimation Duration="0" Storyboard.TargetName="UncheckedVisual"
                              Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#FF9EC6FB"/>
              <ColorAnimation Duration="0" Storyboard.TargetName="UncheckedVisual"
                              Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#FF9EC6FB"/>
              <ColorAnimation Duration="0" Storyboard.TargetName="CheckedVisual"
                              Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#FFE56E17"/>
              <ColorAnimation Duration="0" Storyboard.TargetName="CheckedVisual"
                              Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#FFE56E17"/>
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
              <DoubleAnimation Duration="0" Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="0"/>
              <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
              <DoubleAnimation Duration="0" Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
              <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid HorizontalAlignment="Right" Margin="2,2,5,2">
            <Path x:Name="UncheckedVisual" Height="9" Width="6" HorizontalAlignment="Right"
                  VerticalAlignment="Center" Fill="#FF9EC6FB" Stroke="#FF9EC6FB" StrokeLineJoin="Miter"
                  Data="M 0,0 L 0,9 5,4.5 Z"/>
            <Path x:Name="CheckedVisual" Height="6" Width="6" HorizontalAlignment="Right" VerticalAlignment="Center"
                  Fill="#FFE56E17" Stroke="#FFE56E17" StrokeLineJoin="Miter" Opacity="0" Data="M 6,0 L 6,6 0,6 Z"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type TreeViewItem}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
    <Setter Property="Control.Padding" Value="5,3,15,3"/>
    <Setter Property="FrameworkElement.Cursor" Value="Arrow"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="select_gradient"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="select_gradient"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="hover_gradient"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.85"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="highlight"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.65"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="hover_gradient"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="highlight"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="InactiveOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="inactive"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="InactiveOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="inactive"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid x:Name="grid">
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="19" Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <ToggleButton x:Name="Expander" Style="{DynamicResource NuclearTreeViewItemToggleButton}" ClickMode="Press"
                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Rectangle x:Name="select_gradient" Grid.Column="1" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0"
                       IsHitTestVisible="false" Fill="{DynamicResource PressedBrush}"
                       Stroke="{DynamicResource PressedBorderBrush}"/>
            <Rectangle x:Name="inactive" Grid.Column="1" Fill="#FF999999" Stroke="#FF333333" StrokeThickness="1"
                       RadiusX="2" RadiusY="2" Opacity="0" IsHitTestVisible="false"/>
            <Rectangle x:Name="hover_gradient" Stroke="{DynamicResource FocusBrush}" StrokeThickness="1" RadiusX="1"
                       RadiusY="1" Opacity="0" IsHitTestVisible="false" Grid.Column="1"
                       Fill="{DynamicResource MouseOverBrush}"/>
            <Rectangle x:Name="highlight" Margin="1" StrokeThickness="1" RadiusX="0.5" RadiusY="0.5" Opacity="0"
                       IsHitTestVisible="false" Grid.Column="1" Stroke="{DynamicResource MouseOverHighlightBrush}"/>
            <Border x:Name="Selection_Border" Grid.Column="1"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}">
              <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                ContentSource="Header"/>
            </Border>
            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger SourceName="Selection_Border" Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="TreeViewItem.IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="false">
              <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource SelectedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="InactiveOff_BeginStoryboard" Storyboard="{StaticResource InactiveOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="InactiveOn_BeginStoryboard" Storyboard="{StaticResource InactiveOn}"/>
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="true"/>
                <Condition Property="TreeViewItem.IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}"/>
    <Setter Property="Control.Foreground" Value="#FF042271"/>
    <Setter Property="Control.FontSize" Value="10"/>
    <Setter Property="FrameworkElement.MinHeight" Value="18"/>
    <Setter Property="FrameworkElement.MinWidth" Value="50"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.Padding" Value="3"/>
    <Setter Property="Control.Template" Value="{DynamicResource ButtonTemplate}"/>
  </Style>
  <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="{x:Type CheckBox}">
    <Setter Property="Control.FontSize" Value="10"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
    <Setter Property="Control.Padding" Value="4,1,0,0"/>
    <Setter Property="Control.Template" Value="{DynamicResource CheckBoxTemplate}"/>
  </Style>
  <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}">
    <Setter Property="Control.FontSize" Value="10"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource OutsideFontColor}"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
    <Setter Property="Control.Padding" Value="4,1,0,0"/>
    <Setter Property="Control.Template" Value="{DynamicResource RadioButtonTemplate}"/>
  </Style>
  <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
    <Setter Property="Control.FontSize" Value="10"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.Padding" Value="6,2,25,2"/>
    <Setter Property="Control.Template" Value="{DynamicResource ComboBoxTemplate}"/>
  </Style>
  <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
    <Setter Property="Control.FontSize" Value="10"/>
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="Control.Background">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.Padding" Value="4"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFABAEB3"/>
          <GradientStop Color="#FFE2E8EE" Offset="1"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template" Value="{DynamicResource TextBoxTemplate}"/>
  </Style>
  <LinearGradientBrush x:Key="ToolBarHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFFFFF" Offset="0"/>
    <GradientStop Color="#FFFBFF" Offset="0.5"/>
    <GradientStop Color="#F7F7F7" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#ECECEC" Offset="0"/>
    <GradientStop Color="#DDDDDD" Offset="0.5"/>
    <GradientStop Color="#A0A0A0" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ToolBarButtonHover" Color="#FF125E7C"/>
  <SolidColorBrush x:Key="ToolBarGripper" Color="#C6C3C6"/>
  <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOver"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOver_Highlight"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.65"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOver"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOver_Highlight"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid>
            <Border x:Name="Bd" SnapsToDevicePixels="true" CornerRadius="0,0,0,0"
                    Background="{DynamicResource NormalBrush}"/>
            <Border x:Name="BackgroundOver" BorderThickness="1" CornerRadius="1.75" Opacity="0"
                    Background="{DynamicResource MouseOverBrush}" BorderBrush="{DynamicResource MouseOverBorderBrush}"/>
            <Border x:Name="BackgroundOver_Highlight" BorderThickness="1,0,1,1" CornerRadius="1" Opacity="0"
                    Margin="0,0,0,0" BorderBrush="{DynamicResource MouseOverHighlightBrush}"/>
            <Canvas SnapsToDevicePixels="true" HorizontalAlignment="Right" Margin="7,2,2,2" VerticalAlignment="Bottom"
                    Width="6" Height="7">
              <Path Stroke="White" Data="M 1,1.5 L 6,1.5 "/>
              <Path Stroke="{TemplateBinding Control.Foreground}" Data="M 0,0.5 L 5,0.5 "/>
              <Path Fill="White" Data="M 0.5,4 L 6.5,4 3.5,7 Z"/>
              <Path Fill="{TemplateBinding Control.Foreground}" Data="M -0.5,3 L 5.5,3 2.5,6 Z"/>
            </Canvas>
            <Border x:Name="FocusVisualElement" Margin="-1" BorderBrush="#FFE99862" BorderThickness="1"
                    CornerRadius="2.75" IsHitTestVisible="false" Opacity="0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{StaticResource ToolBarGripper}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FFFDFDFD"/>
  <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFFFFFFF"/>
  <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border SnapsToDevicePixels="true" Background="Transparent" Padding="{TemplateBinding Control.Padding}"
                  CornerRadius="0,0,0,0">
            <Rectangle>
              <Shape.Fill>
                <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" ViewboxUnits="Absolute" Viewport="0,0,4,4"
                              ViewportUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <GeometryDrawing Brush="White" Geometry="M 1,1 L 1,3 3,3 3,1 Z"/>
                      <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0,0 L 0,2 2,2 2,0 Z"/>
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Shape.Fill>
            </Rectangle>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Property="FrameworkElement.Cursor" Value="SizeAll"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground" EndPoint="1,0" StartPoint="0,0">
    <GradientStop Color="#ECECEC" Offset="0"/>
    <GradientStop Color="#DDDDDD" Offset="0.5"/>
    <GradientStop Color="#A0A0A0" Offset="1"/>
  </LinearGradientBrush>
  <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Control.Background}"
                  CornerRadius="0,0,3,3">
            <Canvas SnapsToDevicePixels="true" HorizontalAlignment="Right" Margin="2,7,2,2" VerticalAlignment="Bottom"
                    Width="7" Height="6">
              <Path Stroke="White" Data="M 1.5,1 L 1.5,6 "/>
              <Path Stroke="{TemplateBinding Control.Foreground}" Data="M 0.5,0 L 0.5,5 "/>
              <Path Fill="White" Data="M 3.5,0.5 L 7,3.5 4,6.5 Z"/>
              <Path Fill="{TemplateBinding Control.Foreground}" Data="M 3,-0.5 L 6,2.5 3,5.5 Z"/>
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{StaticResource ToolBarGripper}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ToolBarVerticalBackground" EndPoint="1,0" StartPoint="0,0">
    <GradientStop Color="#FFFFFF" Offset="0"/>
    <GradientStop Color="#FFFBFF" Offset="0.5"/>
    <GradientStop Color="#F7F7F7" Offset="1"/>
  </LinearGradientBrush>
  <Style TargetType="{x:Type ToolBar}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarHorizontalBackground}"/>
    <Setter Property="Control.BorderBrush" Value="#FFB1703C"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolBar}">
          <Grid x:Name="Grid" SnapsToDevicePixels="true" Margin="3,1,1,1">
            <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
              <ToggleButton x:Name="OverflowButton" IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}"
                            Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" ClickMode="Press"
                            FocusVisualStyle="{x:Null}"
                            IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <Control.Background>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                    <GradientStop Color="#FF8AAEDA" Offset="0.521"/>
                    <GradientStop Color="#FFC6D6EC" Offset="0.194"/>
                    <GradientStop Color="#FFB4C9E5" Offset="0.811"/>
                    <GradientStop Color="#FFB7C8E0" Offset="0.507"/>
                    <GradientStop Color="#FFD1DEF0" Offset="1"/>
                  </LinearGradientBrush>
                </Control.Background>
              </ToggleButton>
              <Popup x:Name="OverflowPopup" Focusable="false" AllowsTransparency="true" Placement="Bottom"
                     PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                     StaysOpen="false"
                     IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <Border x:Name="Shdw">
                  <Border BorderThickness="1,1,1,1" BorderBrush="{TemplateBinding Control.BorderBrush}">
                    <Border.Background>
                      <LinearGradientBrush EndPoint="1.204,0.5" StartPoint="0.056,0.5">
                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                        <GradientStop Color="#FFD4D7DB" Offset="1"/>
                      </LinearGradientBrush>
                    </Border.Background>
                    <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" Focusable="true"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="2" WrapWidth="200"
                                          KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
                                          FocusVisualStyle="{x:Null}"/>
                  </Border>
                </Border>
              </Popup>
            </Grid>
            <Border x:Name="MainPanelBorder" Margin="0,0,11,0" BorderThickness="1" CornerRadius="0,0,0,0"
                    Padding="{TemplateBinding Control.Padding}" Background="{DynamicResource NormalBrush}"
                    BorderBrush="{DynamicResource NormalBorderBrush}">
              <Grid>
                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                  <Thumb x:Name="ToolBarThumb" Padding="6,5,1,6" Margin="-3,-1,0,0"
                         Style="{StaticResource ToolBarThumbStyle}" Width="10"/>
                  <ContentPresenter x:Name="ToolBarHeader" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                    HorizontalAlignment="Center" Margin="4,0,4,0" VerticalAlignment="Center" ContentSource="Header"/>
                  <ToolBarPanel x:Name="PART_ToolBarPanel" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                Margin="0,1,2,2" IsItemsHost="true" Background="{DynamicResource NormalBrush}"/>
                </DockPanel>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolBar.IsOverflowOpen" Value="true">
              <Setter TargetName="ToolBarThumb" Property="UIElement.IsEnabled" Value="false"/>
            </Trigger>
            <Trigger Value="{x:Null}" Property="HeaderedItemsControl.Header">
              <Setter TargetName="ToolBarHeader" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked" Value="true">
              <Setter TargetName="ToolBarThumb" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger SourceName="OverflowPopup" Property="Popup.HasDropShadow" Value="true">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="true"/>
              <Setter TargetName="Shdw" Property="Border.Background" Value="#71000000"/>
            </Trigger>
            <Trigger Property="ToolBar.Orientation" Value="Vertical">
              <Setter TargetName="Grid" Property="FrameworkElement.Margin" Value="1,3,1,1"/>
              <Setter TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"
                      Property="FrameworkElement.Style"/>
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Height" Value="10"/>
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Width" Value="Auto"/>
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Margin" Value="-1,-3,0,0"/>
              <Setter TargetName="ToolBarThumb" Property="Control.Padding" Value="5,6,6,1"/>
              <Setter TargetName="ToolBarHeader" Property="FrameworkElement.Margin" Value="0,0,0,4"/>
              <Setter TargetName="PART_ToolBarPanel" Property="FrameworkElement.Margin" Value="1,0,2,2"/>
              <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top"/>
              <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top"/>
              <Setter TargetName="OverflowGrid" Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
              <Setter TargetName="OverflowGrid" Property="FrameworkElement.VerticalAlignment" Value="Bottom"/>
              <Setter TargetName="OverflowPopup" Property="Popup.Placement" Value="Right"/>
              <Setter TargetName="MainPanelBorder" Property="FrameworkElement.Margin" Value="0,0,0,11"/>
              <Setter Value="{StaticResource ToolBarVerticalBackground}" Property="Control.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Foreground" Value="#FF000000"/>
  </Style>
  <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
  <Style TargetType="{x:Type GroupBox}">
    <Setter Property="Control.BorderBrush" Value="#D5DFE5"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}"/>
    <Setter Property="Control.Foreground" Value="#FF042271"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupBox}">
          <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="6"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="6"/>
            </Grid.RowDefinitions>
            <Border Grid.ColumnSpan="4" Grid.RowSpan="4" CornerRadius="4,4,4,4" BorderThickness="1,1,1,1">
              <Border.Background>
                <LinearGradientBrush EndPoint="1.204,0.5" StartPoint="0.056,0.5">
                  <GradientStop Color="#FFFFFFFF" Offset="0"/>
                  <GradientStop Color="#FFD4D7DB" Offset="1"/>
                </LinearGradientBrush>
              </Border.Background>
            </Border>
            <Border Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderThickness="1,1,1,1" CornerRadius="4"
                    BorderBrush="{DynamicResource ControlBorderBrush}">
              <UIElement.OpacityMask>
                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                  <Binding Path="ActualWidth" ElementName="Header"/>
                  <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                  <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                </MultiBinding>
              </UIElement.OpacityMask>
              <Border BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3">
                <Border.BorderBrush>
                  <SolidColorBrush Color="{DynamicResource MainColor}"/>
                </Border.BorderBrush>
                <Border BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2">
                  <Border.BorderBrush>
                    <SolidColorBrush Color="{DynamicResource MainColor}"/>
                  </Border.BorderBrush>
                </Border>
              </Border>
            </Border>
            <Border Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3"
                    Background="{TemplateBinding Control.Background}" BorderBrush="Transparent"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="4"/>
            <Border x:Name="Main" Grid.ColumnSpan="4" Grid.RowSpan="2" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0">
              <Border x:Name="BackgroundNorm" BorderThickness="1" CornerRadius="1.75"
                      Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}"/>
            </Border>
            <Border x:Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="3,1,3,0">
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentSource="Header"
                                RecognizesAccessKey="true" Margin="0,4,0,4"/>
            </Border>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              Margin="{TemplateBinding Control.Padding}" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <DockPanel Margin="{TemplateBinding Control.Padding}">
              <ScrollViewer Focusable="false" DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden">
                <GridViewHeaderRowPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="2,0,2,0"
                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}">
                  <GridViewRowPresenterBase.Columns>
                    <Binding Path="TemplatedParent.View.Columns" RelativeSource="{RelativeSource TemplatedParent}"/>
                  </GridViewRowPresenterBase.Columns>
                </GridViewHeaderRowPresenter>
              </ScrollViewer>
              <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                      KeyboardNavigation.DirectionalNavigation="Local"/>
            </DockPanel>
            <ScrollBar x:Name="PART_HorizontalScrollBar"
                       Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Cursor="Arrow"
                       Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                       Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0.0"
                       Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ScrollBar x:Name="PART_VerticalScrollBar"
                       Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Cursor="Arrow"
                       Grid.Column="1" Orientation="Vertical" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                       Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0.0"
                       Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <DockPanel Grid.Column="1" Grid.Row="1" LastChildFill="false"
                       Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}">
              <Rectangle Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Width="1"
                         Fill="White" DockPanel.Dock="Left"/>
              <Rectangle Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Height="1"
                         Fill="White" DockPanel.Dock="Top"/>
            </DockPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ListView}">
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.BorderBrush" Value="#FFB1703C"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Border x:Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="1">
            <Border.Background>
              <LinearGradientBrush EndPoint="1.204,0.5" StartPoint="0.056,0.5">
                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                <GradientStop Color="#FFD4D7DB" Offset="1"/>
              </LinearGradientBrush>
            </Border.Background>
            <ScrollViewer Padding="{TemplateBinding Control.Padding}"
                          Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ListViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Stroke="#8E6EA6F5" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ListViewItem}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.Margin" Value="0,0,0,1"/>
    <Setter Property="Control.Padding" Value="5,2,5,2"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientOver"
                               Storyboard.TargetProperty="Opacity" To="0.73"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientOver"
                               Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected"
                               Storyboard.TargetProperty="Opacity" To="0.84"/>
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled"
                               Storyboard.TargetProperty="Opacity" To="0.55"/>
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelected"
                               Storyboard.TargetProperty="Opacity" To="0"/>
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled"
                               Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Border x:Name="border" SnapsToDevicePixels="true" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2">
            <Grid Margin="2,0,2,0">
              <Rectangle x:Name="BackgroundGradientOver" RadiusX="1" RadiusY="1"
                         Stroke="{DynamicResource MouseOverBorderBrush}" Opacity="0" Fill="{DynamicResource MouseOverBrush}"/>
              <Rectangle x:Name="BackgroundGradientSelectedDisabled" RadiusX="1" RadiusY="1" Opacity="0"
                         Fill="{DynamicResource ListItemSelectedBrush}"
                         Stroke="{DynamicResource ListItemSelectedBorderBrush}"/>
              <Rectangle x:Name="BackgroundGradientSelected" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0"
                         Fill="{DynamicResource PressedBrush}" Stroke="{DynamicResource PressedBorderBrush}"/>
              <GridViewRowPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="0,2,0,2"
                                    VerticalAlignment="Stretch"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ListBoxItem.IsSelected" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                <Condition Property="Selector.IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Foreground" Value="{DynamicResource OutsideFontColor}"/>
  </Style>
  <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
    <Setter Property="Canvas.Right" Value="-8.5"/>
    <Setter Property="FrameworkElement.Width" Value="18"/>
    <Setter Property="FrameworkElement.Height"
            Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
    <Setter Property="Control.Padding" Value="0,3,0,4"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF">
            <Rectangle HorizontalAlignment="Center" Width="0.5">
              <Shape.Fill>
                <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
              </Shape.Fill>
            </Rectangle>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="2,0,2,0"/>
    <Setter Property="Control.Foreground" Value="#FF042271"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.Padding" Value="3"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver"
                               Storyboard.TargetProperty="Opacity" To="1"/>
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight"
                               Storyboard.TargetProperty="Opacity" To="0.65"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver"
                               Storyboard.TargetProperty="Opacity" To="0"/>
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver_Highlight"
                               Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed"
                               Storyboard.TargetProperty="Opacity" To="0.84"/>
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight"
                               Storyboard.TargetProperty="Opacity" To="0.65"/>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPressed"
                               Storyboard.TargetProperty="Opacity" To="0"/>
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgoundPressed_Highlight"
                               Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid Margin="0,1,0,1">
            <Grid>
              <Border x:Name="BackgroundNorm" BorderThickness="1" CornerRadius="1.75"
                      Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}"/>
              <Border x:Name="BackgroundNorm_highlight" Margin="1" BorderBrush="{DynamicResource NormalHighlightBrush}"
                      BorderThickness="1,0,1,1" CornerRadius="1" Opacity="0.65"/>
              <Border x:Name="BackgroundOver" BorderThickness="1" CornerRadius="1.75" Opacity="0"
                      Background="{DynamicResource MouseOverBrush}" BorderBrush="{DynamicResource MouseOverBorderBrush}"/>
              <Border x:Name="BackgroundOver_Highlight" Margin="1" BorderThickness="1,0,1,1" CornerRadius="1" Opacity="0"
                      BorderBrush="{DynamicResource MouseOverHighlightBrush}"/>
              <Border x:Name="BackgroundPressed" BorderThickness="1" CornerRadius="1.75" Opacity="0"
                      Background="{DynamicResource PressedBrush}" BorderBrush="{DynamicResource PressedBorderBrush}"/>
              <Border x:Name="BackgoundPressed_Highlight" Margin="1" BorderThickness="1,0,1,1" CornerRadius="1"
                      Opacity="0" BorderBrush="{DynamicResource PressedHighlightBrush}"/>
              <ContentPresenter VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                RecognizesAccessKey="true" Margin="2,2,2,2"/>
            </Grid>
            <Canvas>
              <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}"
                     HorizontalAlignment="Stretch"/>
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="FrameworkElement.Height" Value="Auto">
              <Setter Property="FrameworkElement.MinHeight" Value="20"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="GridViewColumnHeader.Role" Value="Padding">
              <Setter TargetName="PART_HeaderGripper" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="GridViewColumnHeader.Role" Value="Floating">
              <Setter TargetName="PART_HeaderGripper" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter Property="Control.Background" Value="Yellow"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource NuclearButtonFocusVisual}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource OutsideFontColor}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver"
                               Storyboard.TargetProperty="Opacity" To="1"/>
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight"
                               Storyboard.TargetProperty="Opacity" To="0.65"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver"
                               Storyboard.TargetProperty="Opacity" To="0"/>
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver_Highlight"
                               Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundChecked"
                               Storyboard.TargetProperty="Opacity" To="0.84"/>
              <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundChecked_Highlight"
                               Storyboard.TargetProperty="Opacity" To="0.65"/>
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundChecked"
                               Storyboard.TargetProperty="Opacity" To="0"/>
              <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgoundChecked_Highlight"
                               Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimation Duration="00:00:00.0010000" Storyboard.TargetName="BackgroundPressed"
                               Storyboard.TargetProperty="Opacity" To="0.84"/>
              <DoubleAnimation Duration="00:00:00.0010000" Storyboard.TargetName="BackgoundPressed_Highlight"
                               Storyboard.TargetProperty="Opacity" To="0.65"/>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimation Duration="00:00:00.0010000" Storyboard.TargetName="BackgroundPressed"
                               Storyboard.TargetProperty="Opacity" To="0"/>
              <DoubleAnimation Duration="00:00:00.0010000" Storyboard.TargetName="BackgoundPressed_Highlight"
                               Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid x:Name="grid1">
            <Border x:Name="BackgroundNorm" BorderThickness="1" CornerRadius="1.75"
                    Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}"/>
            <Border x:Name="BackgroundNorm_highlight" Margin="1" BorderBrush="{DynamicResource NormalHighlightBrush}"
                    BorderThickness="1,0,1,1" CornerRadius="1" Opacity="0.65"/>
            <Border x:Name="BackgroundChecked" BorderThickness="1" CornerRadius="1.75" Opacity="0"
                    Background="{DynamicResource PressedBrush}" BorderBrush="{DynamicResource PressedBorderBrush}"/>
            <Border x:Name="BackgoundChecked_Highlight" Margin="1" BorderThickness="1,0,1,1" CornerRadius="1"
                    Opacity="0" BorderBrush="{DynamicResource PressedHighlightBrush}"/>
            <Border x:Name="BackgroundOver" BorderThickness="1" CornerRadius="1.75" Opacity="0"
                    Background="{DynamicResource MouseOverBrush}" BorderBrush="{DynamicResource MouseOverBorderBrush}"/>
            <Border x:Name="BackgroundOver_Highlight" Margin="1" BorderThickness="1,0,1,1" CornerRadius="1" Opacity="0"
                    BorderBrush="{DynamicResource MouseOverHighlightBrush}"/>
            <Border x:Name="BackgroundPressed" BorderThickness="1" CornerRadius="1.75" Opacity="0"
                    Background="{DynamicResource PressedBrush}" BorderBrush="{DynamicResource PressedBorderBrush}"/>
            <Border x:Name="BackgoundPressed_Highlight" Margin="1" BorderThickness="1,0,1,1" CornerRadius="1"
                    Opacity="0" BorderBrush="{DynamicResource PressedHighlightBrush}"/>
            <Border x:Name="DisabledVisualElement" IsHitTestVisible="false"
                    Background="{DynamicResource DisabledBackgroundBrush}"
                    BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1" Opacity="0"/>
            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding ContentControl.Content}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}"/>
            <TextBlock x:Name="DisabledOverlay" Panel.ZIndex="1" Text="{TemplateBinding ContentControl.Content}"
                       Foreground="#FF8E96A2" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                       VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                       Margin="{TemplateBinding Control.Padding}" Visibility="Collapsed"/>
            <Border x:Name="FocusVisualElement" Margin="-1" Grid.RowSpan="2" BorderBrush="{DynamicResource FocusBrush}"
                    BorderThickness="1" CornerRadius="2.75" IsHitTestVisible="false" Opacity="0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="Control.Foreground" Value="#ADADAD"/>
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="DisabledOverlay" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="contentPresenter" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ToolTip}">
    <Setter Property="Control.Background" Value="#33000000"/>
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Padding" Value="3,0,3,0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <Border x:Name="Root" Background="{TemplateBinding Control.Background}" BorderBrush="#19000000"
                  CornerRadius="3">
            <Border Margin="-3,-3,3,3" BorderBrush="#FF767676"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" Padding="4">
              <FrameworkElement.Resources>
                <Storyboard x:Key="Visible State"/>
                <Storyboard x:Key="Normal State"/>
              </FrameworkElement.Resources>
              <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FFFFFFFF" Offset="0.004"/>
                  <GradientStop Color="#FFCDDCF0" Offset="1"/>
                </LinearGradientBrush>
              </Border.Background>
              <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                Cursor="{TemplateBinding FrameworkElement.Cursor}" Margin="{TemplateBinding Control.Padding}"/>
            </Border>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>